{"version":3,"sources":["node_modules/@ionic/core/dist/esm/cubic-bezier-hHmYLOfE.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Based on:\n * https://stackoverflow.com/questions/7348009/y-coordinate-for-a-given-x-cubic-bezier\n * https://math.stackexchange.com/questions/26846/is-there-an-explicit-form-for-cubic-b%C3%A9zier-curves\n */\n/**\n * EXPERIMENTAL\n * Given a cubic-bezier curve, get the x value (time) given\n * the y value (progression).\n * Ex: cubic-bezier(0.32, 0.72, 0, 1);\n * P0: (0, 0)\n * P1: (0.32, 0.72)\n * P2: (0, 1)\n * P3: (1, 1)\n *\n * If you give a cubic bezier curve that never reaches the\n * provided progression, this function will return an empty array.\n */\nconst getTimeGivenProgression = (p0, p1, p2, p3, progression) => {\n  return solveCubicBezier(p0[1], p1[1], p2[1], p3[1], progression).map(tValue => {\n    return solveCubicParametricEquation(p0[0], p1[0], p2[0], p3[0], tValue);\n  });\n};\n/**\n * Solve a cubic equation in one dimension (time)\n */\nconst solveCubicParametricEquation = (p0, p1, p2, p3, t) => {\n  const partA = 3 * p1 * Math.pow(t - 1, 2);\n  const partB = -3 * p2 * t + 3 * p2 + p3 * t;\n  const partC = p0 * Math.pow(t - 1, 3);\n  return t * (partA + t * partB) - partC;\n};\n/**\n * Find the `t` value for a cubic bezier using Cardano's formula\n */\nconst solveCubicBezier = (p0, p1, p2, p3, refPoint) => {\n  p0 -= refPoint;\n  p1 -= refPoint;\n  p2 -= refPoint;\n  p3 -= refPoint;\n  const roots = solveCubicEquation(p3 - 3 * p2 + 3 * p1 - p0, 3 * p2 - 6 * p1 + 3 * p0, 3 * p1 - 3 * p0, p0);\n  return roots.filter(root => root >= 0 && root <= 1);\n};\nconst solveQuadraticEquation = (a, b, c) => {\n  const discriminant = b * b - 4 * a * c;\n  if (discriminant < 0) {\n    return [];\n  } else {\n    return [(-b + Math.sqrt(discriminant)) / (2 * a), (-b - Math.sqrt(discriminant)) / (2 * a)];\n  }\n};\nconst solveCubicEquation = (a, b, c, d) => {\n  if (a === 0) {\n    return solveQuadraticEquation(b, c, d);\n  }\n  b /= a;\n  c /= a;\n  d /= a;\n  const p = (3 * c - b * b) / 3;\n  const q = (2 * b * b * b - 9 * b * c + 27 * d) / 27;\n  if (p === 0) {\n    return [Math.pow(-q, 1 / 3)];\n  } else if (q === 0) {\n    return [Math.sqrt(-p), -Math.sqrt(-p)];\n  }\n  const discriminant = Math.pow(q / 2, 2) + Math.pow(p / 3, 3);\n  if (discriminant === 0) {\n    return [Math.pow(q / 2, 1 / 2) - b / 3];\n  } else if (discriminant > 0) {\n    return [Math.pow(-(q / 2) + Math.sqrt(discriminant), 1 / 3) - Math.pow(q / 2 + Math.sqrt(discriminant), 1 / 3) - b / 3];\n  }\n  const r = Math.sqrt(Math.pow(-(p / 3), 3));\n  const phi = Math.acos(-(q / (2 * Math.sqrt(Math.pow(-(p / 3), 3)))));\n  const s = 2 * Math.pow(r, 1 / 3);\n  return [s * Math.cos(phi / 3) - b / 3, s * Math.cos((phi + 2 * Math.PI) / 3) - b / 3, s * Math.cos((phi + 4 * Math.PI) / 3) - b / 3];\n};\nexport { getTimeGivenProgression as g };"],"mappings":"AAqBA,IAAMA,EAA0B,CAACC,EAAIC,EAAIC,EAAIC,EAAIC,IACxCC,EAAiBL,EAAG,CAAC,EAAGC,EAAG,CAAC,EAAGC,EAAG,CAAC,EAAGC,EAAG,CAAC,EAAGC,CAAW,EAAE,IAAIE,GAC5DC,EAA6BP,EAAG,CAAC,EAAGC,EAAG,CAAC,EAAGC,EAAG,CAAC,EAAGC,EAAG,CAAC,EAAGG,CAAM,CACvE,EAKGC,EAA+B,CAACP,EAAIC,EAAIC,EAAIC,EAAIK,IAAM,CAC1D,IAAMC,EAAQ,EAAIR,EAAK,KAAK,IAAIO,EAAI,EAAG,CAAC,EAClCE,EAAQ,GAAKR,EAAKM,EAAI,EAAIN,EAAKC,EAAKK,EACpCG,EAAQX,EAAK,KAAK,IAAIQ,EAAI,EAAG,CAAC,EACpC,OAAOA,GAAKC,EAAQD,EAAIE,GAASC,CACnC,EAIMN,EAAmB,CAACL,EAAIC,EAAIC,EAAIC,EAAIS,KACxCZ,GAAMY,EACNX,GAAMW,EACNV,GAAMU,EACNT,GAAMS,EACQC,EAAmBV,EAAK,EAAID,EAAK,EAAID,EAAKD,EAAI,EAAIE,EAAK,EAAID,EAAK,EAAID,EAAI,EAAIC,EAAK,EAAID,EAAIA,CAAE,EAC5F,OAAOc,GAAQA,GAAQ,GAAKA,GAAQ,CAAC,GAE9CC,EAAyB,CAACC,EAAGC,EAAGC,IAAM,CAC1C,IAAMC,EAAeF,EAAIA,EAAI,EAAID,EAAIE,EACrC,OAAIC,EAAe,EACV,CAAC,EAED,EAAE,CAACF,EAAI,KAAK,KAAKE,CAAY,IAAM,EAAIH,IAAK,CAACC,EAAI,KAAK,KAAKE,CAAY,IAAM,EAAIH,EAAE,CAE9F,EACMH,EAAqB,CAACG,EAAGC,EAAGC,EAAGE,IAAM,CACzC,GAAIJ,IAAM,EACR,OAAOD,EAAuBE,EAAGC,EAAGE,CAAC,EAEvCH,GAAKD,EACLE,GAAKF,EACLI,GAAKJ,EACL,IAAMK,GAAK,EAAIH,EAAID,EAAIA,GAAK,EACtBK,GAAK,EAAIL,EAAIA,EAAIA,EAAI,EAAIA,EAAIC,EAAI,GAAKE,GAAK,GACjD,GAAIC,IAAM,EACR,MAAO,CAAC,KAAK,IAAI,CAACC,EAAG,iBAAK,CAAC,EACtB,GAAIA,IAAM,EACf,MAAO,CAAC,KAAK,KAAK,CAACD,CAAC,EAAG,CAAC,KAAK,KAAK,CAACA,CAAC,CAAC,EAEvC,IAAMF,EAAe,KAAK,IAAIG,EAAI,EAAG,CAAC,EAAI,KAAK,IAAID,EAAI,EAAG,CAAC,EAC3D,GAAIF,IAAiB,EACnB,MAAO,CAAC,KAAK,IAAIG,EAAI,EAAG,EAAK,EAAIL,EAAI,CAAC,EACjC,GAAIE,EAAe,EACxB,MAAO,CAAC,KAAK,IAAI,EAAEG,EAAI,GAAK,KAAK,KAAKH,CAAY,EAAG,iBAAK,EAAI,KAAK,IAAIG,EAAI,EAAI,KAAK,KAAKH,CAAY,EAAG,iBAAK,EAAIF,EAAI,CAAC,EAExH,IAAMM,EAAI,KAAK,KAAK,KAAK,IAAI,EAAEF,EAAI,GAAI,CAAC,CAAC,EACnCG,EAAM,KAAK,KAAK,EAAEF,GAAK,EAAI,KAAK,KAAK,KAAK,IAAI,EAAED,EAAI,GAAI,CAAC,CAAC,GAAG,EAC7DI,EAAI,EAAI,KAAK,IAAIF,EAAG,EAAI,CAAC,EAC/B,MAAO,CAACE,EAAI,KAAK,IAAID,EAAM,CAAC,EAAIP,EAAI,EAAGQ,EAAI,KAAK,KAAKD,EAAM,EAAI,KAAK,IAAM,CAAC,EAAIP,EAAI,EAAGQ,EAAI,KAAK,KAAKD,EAAM,EAAI,KAAK,IAAM,CAAC,EAAIP,EAAI,CAAC,CACrI","names":["getTimeGivenProgression","p0","p1","p2","p3","progression","solveCubicBezier","tValue","solveCubicParametricEquation","t","partA","partB","partC","refPoint","solveCubicEquation","root","solveQuadraticEquation","a","b","c","discriminant","d","p","q","r","phi","s"],"x_google_ignoreList":[0]}