{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, f as printIonWarning, h, d as Host, g as getElement } from './index-4DxY6_gG.js';\nimport { b as getIonMode } from './ionic-global-CTSyufhF.js';\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none;box-shadow:none;overflow:hidden;z-index:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));--side-min-width:270px;--side-max-width:28%}\";\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none;box-shadow:none;overflow:hidden;z-index:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));--side-min-width:270px;--side-max-width:28%}\";\n\n// TODO(FW-2832): types\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n  xs: '(min-width: 0px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  never: ''\n};\nconst SplitPane = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n    this.when = QUERY['lg'];\n  }\n  visibleChanged(visible) {\n    this.ionSplitPaneVisible.emit({\n      visible\n    });\n  }\n  /**\n   * @internal\n   */\n  async isVisible() {\n    return Promise.resolve(this.visible);\n  }\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined' && customElements != null) {\n      await customElements.whenDefined('ion-split-pane');\n    }\n    this.styleMainElement();\n    this.updateState();\n  }\n  disconnectedCallback() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  }\n  updateState() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n    // Check if the split-pane is disabled\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    }\n    // When query is a boolean\n    const query = this.when;\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    }\n    // When query is a string, let's find first if it is a shortcut\n    const mediaQuery = QUERY[query] || query;\n    // Media query is empty or null, we hide it\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n    // Listen on media query\n    const callback = q => {\n      this.visible = q.matches;\n    };\n    const mediaList = window.matchMedia(mediaQuery);\n    // TODO FW-5869\n    mediaList.addListener(callback);\n    this.rmL = () => mediaList.removeListener(callback);\n    this.visible = mediaList.matches;\n  }\n  /**\n   * Attempt to find the main content\n   * element inside of the split pane.\n   * If found, set it as the main node.\n   *\n   * We assume that the main node\n   * is available in the DOM on split\n   * pane load.\n   */\n  styleMainElement() {\n    const contentId = this.contentId;\n    const children = this.el.children;\n    const nu = this.el.childElementCount;\n    let foundMain = false;\n    for (let i = 0; i < nu; i++) {\n      const child = children[i];\n      const isMain = contentId !== undefined && child.id === contentId;\n      if (isMain) {\n        if (foundMain) {\n          printIonWarning('[ion-split-pane] - Cannot have more than one main node.');\n          return;\n        } else {\n          setPaneClass(child, isMain);\n          foundMain = true;\n        }\n      }\n    }\n    if (!foundMain) {\n      printIonWarning('[ion-split-pane] - Does not have a specified main node.');\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      key: 'd5e30df12f1f1f855da4c66f98076b9dce762c59',\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`split-pane-${mode}`]: true,\n        'split-pane-visible': this.visible\n      }\n    }, h(\"slot\", {\n      key: '3e30d7cf3bc1cf434e16876a0cb2a36377b8e00f'\n    }));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"visible\": [\"visibleChanged\"],\n      \"disabled\": [\"updateState\"],\n      \"when\": [\"updateState\"]\n    };\n  }\n};\nconst setPaneClass = (el, isMain) => {\n  let toAdd;\n  let toRemove;\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  } else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n  const classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\nSplitPane.style = {\n  ios: splitPaneIosCss,\n  md: splitPaneMdCss\n};\nexport { SplitPane as ion_split_pane };"],"mappings":"2JAKA,IAAMA,EAAkB,qoBAClBC,EAAiB,8oBAGjBC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAQ,CACZ,GAAI,mBACJ,GAAI,qBACJ,GAAI,qBACJ,GAAI,qBACJ,GAAI,sBACJ,MAAO,EACT,EACMC,EAAY,KAAM,CACtB,YAAYC,EAAS,CACnBC,EAAiB,KAAMD,CAAO,EAC9B,KAAK,oBAAsBE,EAAY,KAAM,sBAAuB,CAAC,EACrE,KAAK,QAAU,GAIf,KAAK,SAAW,GAMhB,KAAK,KAAOJ,EAAM,EACpB,CACA,eAAeK,EAAS,CACtB,KAAK,oBAAoB,KAAK,CAC5B,QAAAA,CACF,CAAC,CACH,CAIM,WAAY,QAAAC,EAAA,sBAChB,OAAO,QAAQ,QAAQ,KAAK,OAAO,CACrC,GACM,mBAAoB,QAAAA,EAAA,sBAGpB,OAAO,eAAmB,KAAe,gBAAkB,OAC7D,MAAM,eAAe,YAAY,gBAAgB,GAEnD,KAAK,iBAAiB,EACtB,KAAK,YAAY,CACnB,GACA,sBAAuB,CACjB,KAAK,MACP,KAAK,IAAI,EACT,KAAK,IAAM,OAEf,CACA,aAAc,CAMZ,GALI,KAAK,MACP,KAAK,IAAI,EACT,KAAK,IAAM,QAGT,KAAK,SAAU,CACjB,KAAK,QAAU,GACf,MACF,CAEA,IAAMC,EAAQ,KAAK,KACnB,GAAI,OAAOA,GAAU,UAAW,CAC9B,KAAK,QAAUA,EACf,MACF,CAEA,IAAMC,EAAaR,EAAMO,CAAK,GAAKA,EAEnC,GAAIC,EAAW,SAAW,EAAG,CAC3B,KAAK,QAAU,GACf,MACF,CAEA,IAAMC,EAAWC,GAAK,CACpB,KAAK,QAAUA,EAAE,OACnB,EACMC,EAAY,OAAO,WAAWH,CAAU,EAE9CG,EAAU,YAAYF,CAAQ,EAC9B,KAAK,IAAM,IAAME,EAAU,eAAeF,CAAQ,EAClD,KAAK,QAAUE,EAAU,OAC3B,CAUA,kBAAmB,CACjB,IAAMC,EAAY,KAAK,UACjBC,EAAW,KAAK,GAAG,SACnBC,EAAK,KAAK,GAAG,kBACfC,EAAY,GAChB,QAASC,EAAI,EAAGA,EAAIF,EAAIE,IAAK,CAC3B,IAAMC,EAAQJ,EAASG,CAAC,EAClBE,EAASN,IAAc,QAAaK,EAAM,KAAOL,EACvD,GAAIM,EACF,GAAIH,EAAW,CACbI,EAAgB,yDAAyD,EACzE,MACF,MACEC,EAAaH,EAAOC,CAAM,EAC1BH,EAAY,EAGlB,CACKA,GACHI,EAAgB,yDAAyD,CAE7E,CACA,QAAS,CACP,IAAME,EAAOC,EAAW,IAAI,EAC5B,OAAOC,EAAEC,EAAM,CACb,IAAK,2CACL,MAAO,CACL,CAACH,CAAI,EAAG,GAER,CAAC,cAAcA,CAAI,EAAE,EAAG,GACxB,qBAAsB,KAAK,OAC7B,CACF,EAAGE,EAAE,OAAQ,CACX,IAAK,0CACP,CAAC,CAAC,CACJ,CACA,IAAI,IAAK,CACP,OAAOE,EAAW,IAAI,CACxB,CACA,WAAW,UAAW,CACpB,MAAO,CACL,QAAW,CAAC,gBAAgB,EAC5B,SAAY,CAAC,aAAa,EAC1B,KAAQ,CAAC,aAAa,CACxB,CACF,CACF,EACML,EAAe,CAACM,EAAIR,IAAW,CACnC,IAAIS,EACAC,EACAV,GACFS,EAAQ7B,EACR8B,EAAW7B,IAEX4B,EAAQ5B,EACR6B,EAAW9B,GAEb,IAAM+B,EAAYH,EAAG,UACrBG,EAAU,IAAIF,CAAK,EACnBE,EAAU,OAAOD,CAAQ,CAC3B,EACA3B,EAAU,MAAQ,CAChB,IAAKL,EACL,GAAIC,CACN","names":["splitPaneIosCss","splitPaneMdCss","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","SplitPane","hostRef","registerInstance","createEvent","visible","__async","query","mediaQuery","callback","q","mediaList","contentId","children","nu","foundMain","i","child","isMain","printIonWarning","setPaneClass","mode","getIonMode","h","Host","getElement","el","toAdd","toRemove","classList"],"x_google_ignoreList":[0]}