{"version":3,"sources":["node_modules/localforage/dist/localforage.js","node_modules/@ionic/storage-angular/node_modules/@ionic/storage/dist/esm/index.js","node_modules/@ionic/storage-angular/fesm2020/ionic-storage-angular.mjs"],"sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n    g.localforage = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n      return n[o].exports;\n    }\n    var i = typeof require == \"function\" && require;\n    for (var o = 0; o < r.length; o++) s(r[o]);\n    return s;\n  }({\n    1: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        var Mutation = global.MutationObserver || global.WebKitMutationObserver;\n        var scheduleDrain;\n        {\n          if (Mutation) {\n            var called = 0;\n            var observer = new Mutation(nextTick);\n            var element = global.document.createTextNode('');\n            observer.observe(element, {\n              characterData: true\n            });\n            scheduleDrain = function () {\n              element.data = called = ++called % 2;\n            };\n          } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n            var channel = new global.MessageChannel();\n            channel.port1.onmessage = nextTick;\n            scheduleDrain = function () {\n              channel.port2.postMessage(0);\n            };\n          } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n            scheduleDrain = function () {\n              // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n              // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n              var scriptEl = global.document.createElement('script');\n              scriptEl.onreadystatechange = function () {\n                nextTick();\n                scriptEl.onreadystatechange = null;\n                scriptEl.parentNode.removeChild(scriptEl);\n                scriptEl = null;\n              };\n              global.document.documentElement.appendChild(scriptEl);\n            };\n          } else {\n            scheduleDrain = function () {\n              setTimeout(nextTick, 0);\n            };\n          }\n        }\n        var draining;\n        var queue = [];\n        //named nextTick for less confusing stack traces\n        function nextTick() {\n          draining = true;\n          var i, oldQueue;\n          var len = queue.length;\n          while (len) {\n            oldQueue = queue;\n            queue = [];\n            i = -1;\n            while (++i < len) {\n              oldQueue[i]();\n            }\n            len = queue.length;\n          }\n          draining = false;\n        }\n        module.exports = immediate;\n        function immediate(task) {\n          if (queue.push(task) === 1 && !draining) {\n            scheduleDrain();\n          }\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}],\n    2: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var immediate = _dereq_(1);\n\n      /* istanbul ignore next */\n      function INTERNAL() {}\n      var handlers = {};\n      var REJECTED = ['REJECTED'];\n      var FULFILLED = ['FULFILLED'];\n      var PENDING = ['PENDING'];\n      module.exports = Promise;\n      function Promise(resolver) {\n        if (typeof resolver !== 'function') {\n          throw new TypeError('resolver must be a function');\n        }\n        this.state = PENDING;\n        this.queue = [];\n        this.outcome = void 0;\n        if (resolver !== INTERNAL) {\n          safelyResolveThenable(this, resolver);\n        }\n      }\n      Promise.prototype[\"catch\"] = function (onRejected) {\n        return this.then(null, onRejected);\n      };\n      Promise.prototype.then = function (onFulfilled, onRejected) {\n        if (typeof onFulfilled !== 'function' && this.state === FULFILLED || typeof onRejected !== 'function' && this.state === REJECTED) {\n          return this;\n        }\n        var promise = new this.constructor(INTERNAL);\n        if (this.state !== PENDING) {\n          var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n          unwrap(promise, resolver, this.outcome);\n        } else {\n          this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n        }\n        return promise;\n      };\n      function QueueItem(promise, onFulfilled, onRejected) {\n        this.promise = promise;\n        if (typeof onFulfilled === 'function') {\n          this.onFulfilled = onFulfilled;\n          this.callFulfilled = this.otherCallFulfilled;\n        }\n        if (typeof onRejected === 'function') {\n          this.onRejected = onRejected;\n          this.callRejected = this.otherCallRejected;\n        }\n      }\n      QueueItem.prototype.callFulfilled = function (value) {\n        handlers.resolve(this.promise, value);\n      };\n      QueueItem.prototype.otherCallFulfilled = function (value) {\n        unwrap(this.promise, this.onFulfilled, value);\n      };\n      QueueItem.prototype.callRejected = function (value) {\n        handlers.reject(this.promise, value);\n      };\n      QueueItem.prototype.otherCallRejected = function (value) {\n        unwrap(this.promise, this.onRejected, value);\n      };\n      function unwrap(promise, func, value) {\n        immediate(function () {\n          var returnValue;\n          try {\n            returnValue = func(value);\n          } catch (e) {\n            return handlers.reject(promise, e);\n          }\n          if (returnValue === promise) {\n            handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n          } else {\n            handlers.resolve(promise, returnValue);\n          }\n        });\n      }\n      handlers.resolve = function (self, value) {\n        var result = tryCatch(getThen, value);\n        if (result.status === 'error') {\n          return handlers.reject(self, result.value);\n        }\n        var thenable = result.value;\n        if (thenable) {\n          safelyResolveThenable(self, thenable);\n        } else {\n          self.state = FULFILLED;\n          self.outcome = value;\n          var i = -1;\n          var len = self.queue.length;\n          while (++i < len) {\n            self.queue[i].callFulfilled(value);\n          }\n        }\n        return self;\n      };\n      handlers.reject = function (self, error) {\n        self.state = REJECTED;\n        self.outcome = error;\n        var i = -1;\n        var len = self.queue.length;\n        while (++i < len) {\n          self.queue[i].callRejected(error);\n        }\n        return self;\n      };\n      function getThen(obj) {\n        // Make sure we only access the accessor once as required by the spec\n        var then = obj && obj.then;\n        if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n          return function appyThen() {\n            then.apply(obj, arguments);\n          };\n        }\n      }\n      function safelyResolveThenable(self, thenable) {\n        // Either fulfill, reject or reject with error\n        var called = false;\n        function onError(value) {\n          if (called) {\n            return;\n          }\n          called = true;\n          handlers.reject(self, value);\n        }\n        function onSuccess(value) {\n          if (called) {\n            return;\n          }\n          called = true;\n          handlers.resolve(self, value);\n        }\n        function tryToUnwrap() {\n          thenable(onSuccess, onError);\n        }\n        var result = tryCatch(tryToUnwrap);\n        if (result.status === 'error') {\n          onError(result.value);\n        }\n      }\n      function tryCatch(func, value) {\n        var out = {};\n        try {\n          out.value = func(value);\n          out.status = 'success';\n        } catch (e) {\n          out.status = 'error';\n          out.value = e;\n        }\n        return out;\n      }\n      Promise.resolve = resolve;\n      function resolve(value) {\n        if (value instanceof this) {\n          return value;\n        }\n        return handlers.resolve(new this(INTERNAL), value);\n      }\n      Promise.reject = reject;\n      function reject(reason) {\n        var promise = new this(INTERNAL);\n        return handlers.reject(promise, reason);\n      }\n      Promise.all = all;\n      function all(iterable) {\n        var self = this;\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n        var len = iterable.length;\n        var called = false;\n        if (!len) {\n          return this.resolve([]);\n        }\n        var values = new Array(len);\n        var resolved = 0;\n        var i = -1;\n        var promise = new this(INTERNAL);\n        while (++i < len) {\n          allResolver(iterable[i], i);\n        }\n        return promise;\n        function allResolver(value, i) {\n          self.resolve(value).then(resolveFromAll, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n          function resolveFromAll(outValue) {\n            values[i] = outValue;\n            if (++resolved === len && !called) {\n              called = true;\n              handlers.resolve(promise, values);\n            }\n          }\n        }\n      }\n      Promise.race = race;\n      function race(iterable) {\n        var self = this;\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n        var len = iterable.length;\n        var called = false;\n        if (!len) {\n          return this.resolve([]);\n        }\n        var i = -1;\n        var promise = new this(INTERNAL);\n        while (++i < len) {\n          resolver(iterable[i]);\n        }\n        return promise;\n        function resolver(value) {\n          self.resolve(value).then(function (response) {\n            if (!called) {\n              called = true;\n              handlers.resolve(promise, response);\n            }\n          }, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n        }\n      }\n    }, {\n      \"1\": 1\n    }],\n    3: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        if (typeof global.Promise !== 'function') {\n          global.Promise = _dereq_(2);\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"2\": 2\n    }],\n    4: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function getIDB() {\n        /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n        try {\n          if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n          }\n          if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n          }\n          if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n          }\n          if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n          }\n          if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n          }\n        } catch (e) {\n          return;\n        }\n      }\n      var idb = getIDB();\n      function isIndexedDBValid() {\n        try {\n          // Initialize IndexedDB; fall back to vendor-prefixed versions\n          // if needed.\n          if (!idb || !idb.open) {\n            return false;\n          }\n          // We mimic PouchDB here;\n          //\n          // We test for openDatabase because IE Mobile identifies itself\n          // as Safari. Oh the lulz...\n          var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n          var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n          // Safari <10.1 does not meet our requirements for IDB support\n          // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n          // Safari 10.1 shipped with fetch, we can use that to detect it.\n          // Note: this creates issues with `window.fetch` polyfills and\n          // overrides; see:\n          // https://github.com/localForage/localForage/issues/856\n          return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n          // some outdated implementations of IDB that appear on Samsung\n          // and HTC Android devices <4.4 are missing IDBKeyRange\n          // See: https://github.com/mozilla/localForage/issues/128\n          // See: https://github.com/mozilla/localForage/issues/272\n          typeof IDBKeyRange !== 'undefined';\n        } catch (e) {\n          return false;\n        }\n      }\n\n      // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n      // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n      function createBlob(parts, properties) {\n        /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n        parts = parts || [];\n        properties = properties || {};\n        try {\n          return new Blob(parts, properties);\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          }\n          var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n          var builder = new Builder();\n          for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n          }\n          return builder.getBlob(properties.type);\n        }\n      }\n\n      // This is CommonJS because lie is an external dependency, so Rollup\n      // can just ignore it.\n      if (typeof Promise === 'undefined') {\n        // In the \"nopromises\" build this will just throw if you don't have\n        // a global promise object, but it would throw anyway later.\n        _dereq_(3);\n      }\n      var Promise$1 = Promise;\n      function executeCallback(promise, callback) {\n        if (callback) {\n          promise.then(function (result) {\n            callback(null, result);\n          }, function (error) {\n            callback(error);\n          });\n        }\n      }\n      function executeTwoCallbacks(promise, callback, errorCallback) {\n        if (typeof callback === 'function') {\n          promise.then(callback);\n        }\n        if (typeof errorCallback === 'function') {\n          promise[\"catch\"](errorCallback);\n        }\n      }\n      function normalizeKey(key) {\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n        return key;\n      }\n      function getCallback() {\n        if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n          return arguments[arguments.length - 1];\n        }\n      }\n\n      // Some code originally from async_storage.js in\n      // [Gaia](https://github.com/mozilla-b2g/gaia).\n\n      var DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n      var supportsBlobs = void 0;\n      var dbContexts = {};\n      var toString = Object.prototype.toString;\n\n      // Transaction Modes\n      var READ_ONLY = 'readonly';\n      var READ_WRITE = 'readwrite';\n\n      // Transform a binary string to an array buffer, because otherwise\n      // weird stuff happens when you try to work with the binary string directly.\n      // It is known.\n      // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n      // encode-decode-image-with-base64-breaks-image (2013-04-21)\n      function _binStringToArrayBuffer(bin) {\n        var length = bin.length;\n        var buf = new ArrayBuffer(length);\n        var arr = new Uint8Array(buf);\n        for (var i = 0; i < length; i++) {\n          arr[i] = bin.charCodeAt(i);\n        }\n        return buf;\n      }\n\n      //\n      // Blobs are not supported in all versions of IndexedDB, notably\n      // Chrome <37 and Android <5. In those versions, storing a blob will throw.\n      //\n      // Various other blob bugs exist in Chrome v37-42 (inclusive).\n      // Detecting them is expensive and confusing to users, and Chrome 37-42\n      // is at very low usage worldwide, so we do a hacky userAgent check instead.\n      //\n      // content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n      // 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n      // FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n      //\n      // Code borrowed from PouchDB. See:\n      // https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n      //\n      function _checkBlobSupportWithoutCaching(idb) {\n        return new Promise$1(function (resolve) {\n          var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n          var blob = createBlob(['']);\n          txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n          txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n          };\n          txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n          };\n        })[\"catch\"](function () {\n          return false; // error, so assume unsupported\n        });\n      }\n      function _checkBlobSupport(idb) {\n        if (typeof supportsBlobs === 'boolean') {\n          return Promise$1.resolve(supportsBlobs);\n        }\n        return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n          supportsBlobs = value;\n          return supportsBlobs;\n        });\n      }\n      function _deferReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name];\n\n        // Create a deferred object representing the current database operation.\n        var deferredOperation = {};\n        deferredOperation.promise = new Promise$1(function (resolve, reject) {\n          deferredOperation.resolve = resolve;\n          deferredOperation.reject = reject;\n        });\n\n        // Enqueue the deferred operation.\n        dbContext.deferredOperations.push(deferredOperation);\n\n        // Chain its promise to the database readiness.\n        if (!dbContext.dbReady) {\n          dbContext.dbReady = deferredOperation.promise;\n        } else {\n          dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n          });\n        }\n      }\n      function _advanceReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name];\n\n        // Dequeue a deferred operation.\n        var deferredOperation = dbContext.deferredOperations.pop();\n\n        // Resolve its promise (which is part of the database readiness\n        // chain of promises).\n        if (deferredOperation) {\n          deferredOperation.resolve();\n          return deferredOperation.promise;\n        }\n      }\n      function _rejectReadiness(dbInfo, err) {\n        var dbContext = dbContexts[dbInfo.name];\n\n        // Dequeue a deferred operation.\n        var deferredOperation = dbContext.deferredOperations.pop();\n\n        // Reject its promise (which is part of the database readiness\n        // chain of promises).\n        if (deferredOperation) {\n          deferredOperation.reject(err);\n          return deferredOperation.promise;\n        }\n      }\n      function _getConnection(dbInfo, upgradeNeeded) {\n        return new Promise$1(function (resolve, reject) {\n          dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n          if (dbInfo.db) {\n            if (upgradeNeeded) {\n              _deferReadiness(dbInfo);\n              dbInfo.db.close();\n            } else {\n              return resolve(dbInfo.db);\n            }\n          }\n          var dbArgs = [dbInfo.name];\n          if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n          }\n          var openreq = idb.open.apply(idb, dbArgs);\n          if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n              var db = openreq.result;\n              try {\n                db.createObjectStore(dbInfo.storeName);\n                if (e.oldVersion <= 1) {\n                  // Added when support for blob shims was added\n                  db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                }\n              } catch (ex) {\n                if (ex.name === 'ConstraintError') {\n                  console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                } else {\n                  throw ex;\n                }\n              }\n            };\n          }\n          openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n          };\n          openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n              // Triggered when the database is modified (e.g. adding an objectStore) or\n              // deleted (even when initiated by other sessions in different tabs).\n              // Closing the connection here prevents those operations from being blocked.\n              // If the database is accessed again later by this instance, the connection\n              // will be reopened or the database recreated as needed.\n              e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n          };\n        });\n      }\n      function _getOriginalConnection(dbInfo) {\n        return _getConnection(dbInfo, false);\n      }\n      function _getUpgradedConnection(dbInfo) {\n        return _getConnection(dbInfo, true);\n      }\n      function _isUpgradeNeeded(dbInfo, defaultVersion) {\n        if (!dbInfo.db) {\n          return true;\n        }\n        var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n        var isDowngrade = dbInfo.version < dbInfo.db.version;\n        var isUpgrade = dbInfo.version > dbInfo.db.version;\n        if (isDowngrade) {\n          // If the version is not the default one\n          // then warn for impossible downgrade.\n          if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n          }\n          // Align the versions to prevent errors.\n          dbInfo.version = dbInfo.db.version;\n        }\n        if (isUpgrade || isNewStore) {\n          // If the store is new then increment the version (if needed).\n          // This will trigger an \"upgradeneeded\" event which is required\n          // for creating a store.\n          if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n              dbInfo.version = incVersion;\n            }\n          }\n          return true;\n        }\n        return false;\n      }\n\n      // encode a blob for indexeddb engines that don't support blobs\n      function _encodeBlob(blob) {\n        return new Promise$1(function (resolve, reject) {\n          var reader = new FileReader();\n          reader.onerror = reject;\n          reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n              __local_forage_encoded_blob: true,\n              data: base64,\n              type: blob.type\n            });\n          };\n          reader.readAsBinaryString(blob);\n        });\n      }\n\n      // decode an encoded blob\n      function _decodeBlob(encodedBlob) {\n        var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n        return createBlob([arrayBuff], {\n          type: encodedBlob.type\n        });\n      }\n\n      // is this one of our fancy encoded blobs?\n      function _isEncodedBlob(value) {\n        return value && value.__local_forage_encoded_blob;\n      }\n\n      // Specialize the default `ready()` function by making it dependent\n      // on the current database operations. Thus, the driver will be actually\n      // ready when it's been initialized (default) *and* there are no pending\n      // operations on the database (initiated by some other instances).\n      function _fullyReady(callback) {\n        var self = this;\n        var promise = self._initReady().then(function () {\n          var dbContext = dbContexts[self._dbInfo.name];\n          if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n          }\n        });\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n      }\n\n      // Try to establish a new db connection to replace the\n      // current one which is broken (i.e. experiencing\n      // InvalidStateError while creating a transaction).\n      function _tryReconnect(dbInfo) {\n        _deferReadiness(dbInfo);\n        var dbContext = dbContexts[dbInfo.name];\n        var forages = dbContext.forages;\n        for (var i = 0; i < forages.length; i++) {\n          var forage = forages[i];\n          if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n          }\n        }\n        dbInfo.db = null;\n        return _getOriginalConnection(dbInfo).then(function (db) {\n          dbInfo.db = db;\n          if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n          return db;\n        }).then(function (db) {\n          // store the latest db reference\n          // in case the db was upgraded\n          dbInfo.db = dbContext.db = db;\n          for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n          }\n        })[\"catch\"](function (err) {\n          _rejectReadiness(dbInfo, err);\n          throw err;\n        });\n      }\n\n      // FF doesn't like Promises (micro-tasks) and IDDB store operations,\n      // so we have to do it with callbacks\n      function createTransaction(dbInfo, mode, callback, retries) {\n        if (retries === undefined) {\n          retries = 1;\n        }\n        try {\n          var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n          callback(null, tx);\n        } catch (err) {\n          if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n              if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                // increase the db version, to create the new ObjectStore\n                if (dbInfo.db) {\n                  dbInfo.version = dbInfo.db.version + 1;\n                }\n                // Reopen the database for upgrading.\n                return _getUpgradedConnection(dbInfo);\n              }\n            }).then(function () {\n              return _tryReconnect(dbInfo).then(function () {\n                createTransaction(dbInfo, mode, callback, retries - 1);\n              });\n            })[\"catch\"](callback);\n          }\n          callback(err);\n        }\n      }\n      function createDbContext() {\n        return {\n          // Running localForages sharing a database.\n          forages: [],\n          // Shared database.\n          db: null,\n          // Database readiness (promise).\n          dbReady: null,\n          // Deferred operations on the database.\n          deferredOperations: []\n        };\n      }\n\n      // Open the IndexedDB database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n      function _initStorage(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        }\n\n        // Get the current context of the database;\n        var dbContext = dbContexts[dbInfo.name];\n\n        // ...or create a new context.\n        if (!dbContext) {\n          dbContext = createDbContext();\n          // Register the new context in the global container.\n          dbContexts[dbInfo.name] = dbContext;\n        }\n\n        // Register itself as a running localForage in the current context.\n        dbContext.forages.push(self);\n\n        // Replace the default `ready()` function with the specialized one.\n        if (!self._initReady) {\n          self._initReady = self.ready;\n          self.ready = _fullyReady;\n        }\n\n        // Create an array of initialization states of the related localForages.\n        var initPromises = [];\n        function ignoreErrors() {\n          // Don't handle errors here,\n          // just makes sure related localForages aren't pending.\n          return Promise$1.resolve();\n        }\n        for (var j = 0; j < dbContext.forages.length; j++) {\n          var forage = dbContext.forages[j];\n          if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n          }\n        }\n\n        // Take a snapshot of the related localForages.\n        var forages = dbContext.forages.slice(0);\n\n        // Initialize the connection process only when\n        // all the related localForages aren't pending.\n        return Promise$1.all(initPromises).then(function () {\n          dbInfo.db = dbContext.db;\n          // Get the connection or open a new one without upgrade.\n          return _getOriginalConnection(dbInfo);\n        }).then(function (db) {\n          dbInfo.db = db;\n          if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n          return db;\n        }).then(function (db) {\n          dbInfo.db = dbContext.db = db;\n          self._dbInfo = dbInfo;\n          // Share the final connection amongst related localForages.\n          for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n              // Self is already up-to-date.\n              forage._dbInfo.db = dbInfo.db;\n              forage._dbInfo.version = dbInfo.version;\n            }\n          }\n        });\n      }\n      function getItem(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.get(key);\n                req.onsuccess = function () {\n                  var value = req.result;\n                  if (value === undefined) {\n                    value = null;\n                  }\n                  if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                  }\n                  resolve(value);\n                };\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // Iterate over all items stored in database.\n      function iterate(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.openCursor();\n                var iterationNumber = 1;\n                req.onsuccess = function () {\n                  var cursor = req.result;\n                  if (cursor) {\n                    var value = cursor.value;\n                    if (_isEncodedBlob(value)) {\n                      value = _decodeBlob(value);\n                    }\n                    var result = iterator(value, cursor.key, iterationNumber++);\n\n                    // when the iterator callback returns any\n                    // (non-`undefined`) value, then we stop\n                    // the iteration immediately\n                    if (result !== void 0) {\n                      resolve(result);\n                    } else {\n                      cursor[\"continue\"]();\n                    }\n                  } else {\n                    resolve();\n                  }\n                };\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function setItem(key, value, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          var dbInfo;\n          self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n              return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                if (blobSupport) {\n                  return value;\n                }\n                return _encodeBlob(value);\n              });\n            }\n            return value;\n          }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n\n                // The reason we don't _save_ null is because IE 10 does\n                // not support saving the `null` type in IndexedDB. How\n                // ironic, given the bug below!\n                // See: https://github.com/mozilla/localForage/issues/161\n                if (value === null) {\n                  value = undefined;\n                }\n                var req = store.put(value, key);\n                transaction.oncomplete = function () {\n                  // Cast to undefined so the value passed to\n                  // callback/promise is the same as what one would get out\n                  // of `getItem()` later. This leads to some weirdness\n                  // (setItem('foo', undefined) will return `null`), but\n                  // it's not my fault localStorage is our baseline and that\n                  // it's weird.\n                  if (value === undefined) {\n                    value = null;\n                  }\n                  resolve(value);\n                };\n                transaction.onabort = transaction.onerror = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function removeItem(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                // We use a Grunt task to make this safe for IE and some\n                // versions of Android (including those used by Cordova).\n                // Normally IE won't like `.delete()` and will insist on\n                // using `['delete']()`, but we have a build step that\n                // fixes this for us now.\n                var req = store[\"delete\"](key);\n                transaction.oncomplete = function () {\n                  resolve();\n                };\n                transaction.onerror = function () {\n                  reject(req.error);\n                };\n\n                // The request will be also be aborted if we've exceeded our storage\n                // space.\n                transaction.onabort = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function clear(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.clear();\n                transaction.oncomplete = function () {\n                  resolve();\n                };\n                transaction.onabort = transaction.onerror = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function length(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.count();\n                req.onsuccess = function () {\n                  resolve(req.result);\n                };\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function key(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          if (n < 0) {\n            resolve(null);\n            return;\n          }\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var advanced = false;\n                var req = store.openKeyCursor();\n                req.onsuccess = function () {\n                  var cursor = req.result;\n                  if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n                    return;\n                  }\n                  if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                  } else {\n                    if (!advanced) {\n                      // Otherwise, ask the cursor to skip ahead n\n                      // records.\n                      advanced = true;\n                      cursor.advance(n);\n                    } else {\n                      // When we get here, we've got the nth key.\n                      resolve(cursor.key);\n                    }\n                  }\n                };\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function keys(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.openKeyCursor();\n                var keys = [];\n                req.onsuccess = function () {\n                  var cursor = req.result;\n                  if (!cursor) {\n                    resolve(keys);\n                    return;\n                  }\n                  keys.push(cursor.key);\n                  cursor[\"continue\"]();\n                };\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function dropInstance(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        var currentConfig = this.config();\n        options = typeof options !== 'function' && options || {};\n        if (!options.name) {\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n        var self = this;\n        var promise;\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n          var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n              forages[i]._dbInfo.db = db;\n            }\n            return db;\n          });\n          if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n              _deferReadiness(options);\n              var dbContext = dbContexts[options.name];\n              var forages = dbContext.forages;\n              db.close();\n              for (var i = 0; i < forages.length; i++) {\n                var forage = forages[i];\n                forage._dbInfo.db = null;\n              }\n              var dropDBPromise = new Promise$1(function (resolve, reject) {\n                var req = idb.deleteDatabase(options.name);\n                req.onerror = function () {\n                  var db = req.result;\n                  if (db) {\n                    db.close();\n                  }\n                  reject(req.error);\n                };\n                req.onblocked = function () {\n                  // Closing all open connections in onversionchange handler should prevent this situation, but if\n                  // we do get here, it just means the request remains pending - eventually it will succeed or error\n                  console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                };\n                req.onsuccess = function () {\n                  var db = req.result;\n                  if (db) {\n                    db.close();\n                  }\n                  resolve(db);\n                };\n              });\n              return dropDBPromise.then(function (db) {\n                dbContext.db = db;\n                for (var i = 0; i < forages.length; i++) {\n                  var _forage = forages[i];\n                  _advanceReadiness(_forage._dbInfo);\n                }\n              })[\"catch\"](function (err) {\n                (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                throw err;\n              });\n            });\n          } else {\n            promise = dbPromise.then(function (db) {\n              if (!db.objectStoreNames.contains(options.storeName)) {\n                return;\n              }\n              var newVersion = db.version + 1;\n              _deferReadiness(options);\n              var dbContext = dbContexts[options.name];\n              var forages = dbContext.forages;\n              db.close();\n              for (var i = 0; i < forages.length; i++) {\n                var forage = forages[i];\n                forage._dbInfo.db = null;\n                forage._dbInfo.version = newVersion;\n              }\n              var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                var req = idb.open(options.name, newVersion);\n                req.onerror = function (err) {\n                  var db = req.result;\n                  db.close();\n                  reject(err);\n                };\n                req.onupgradeneeded = function () {\n                  var db = req.result;\n                  db.deleteObjectStore(options.storeName);\n                };\n                req.onsuccess = function () {\n                  var db = req.result;\n                  db.close();\n                  resolve(db);\n                };\n              });\n              return dropObjectPromise.then(function (db) {\n                dbContext.db = db;\n                for (var j = 0; j < forages.length; j++) {\n                  var _forage2 = forages[j];\n                  _forage2._dbInfo.db = db;\n                  _advanceReadiness(_forage2._dbInfo);\n                }\n              })[\"catch\"](function (err) {\n                (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                throw err;\n              });\n            });\n          }\n        }\n        executeCallback(promise, callback);\n        return promise;\n      }\n      var asyncStorage = {\n        _driver: 'asyncStorage',\n        _initStorage: _initStorage,\n        _support: isIndexedDBValid(),\n        iterate: iterate,\n        getItem: getItem,\n        setItem: setItem,\n        removeItem: removeItem,\n        clear: clear,\n        length: length,\n        key: key,\n        keys: keys,\n        dropInstance: dropInstance\n      };\n      function isWebSQLValid() {\n        return typeof openDatabase === 'function';\n      }\n\n      // Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n      // it to Base64, so this is how we store it to prevent very strange errors with less\n      // verbose ways of binary <-> string data storage.\n      var BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n      var BLOB_TYPE_PREFIX = '~~local_forage_type~';\n      var BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n      var SERIALIZED_MARKER = '__lfsc__:';\n      var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n      // OMG the serializations!\n      var TYPE_ARRAYBUFFER = 'arbf';\n      var TYPE_BLOB = 'blob';\n      var TYPE_INT8ARRAY = 'si08';\n      var TYPE_UINT8ARRAY = 'ui08';\n      var TYPE_UINT8CLAMPEDARRAY = 'uic8';\n      var TYPE_INT16ARRAY = 'si16';\n      var TYPE_INT32ARRAY = 'si32';\n      var TYPE_UINT16ARRAY = 'ur16';\n      var TYPE_UINT32ARRAY = 'ui32';\n      var TYPE_FLOAT32ARRAY = 'fl32';\n      var TYPE_FLOAT64ARRAY = 'fl64';\n      var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n      var toString$1 = Object.prototype.toString;\n      function stringToBuffer(serializedString) {\n        // Fill the string into a ArrayBuffer.\n        var bufferLength = serializedString.length * 0.75;\n        var len = serializedString.length;\n        var i;\n        var p = 0;\n        var encoded1, encoded2, encoded3, encoded4;\n        if (serializedString[serializedString.length - 1] === '=') {\n          bufferLength--;\n          if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n          }\n        }\n        var buffer = new ArrayBuffer(bufferLength);\n        var bytes = new Uint8Array(buffer);\n        for (i = 0; i < len; i += 4) {\n          encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n          encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n          encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n          encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n          /*jslint bitwise: true */\n          bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n          bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n          bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n        }\n        return buffer;\n      }\n\n      // Converts a buffer to a string to store, serialized, in the backend\n      // storage library.\n      function bufferToString(buffer) {\n        // base64-arraybuffer\n        var bytes = new Uint8Array(buffer);\n        var base64String = '';\n        var i;\n        for (i = 0; i < bytes.length; i += 3) {\n          /*jslint bitwise: true */\n          base64String += BASE_CHARS[bytes[i] >> 2];\n          base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n          base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n          base64String += BASE_CHARS[bytes[i + 2] & 63];\n        }\n        if (bytes.length % 3 === 2) {\n          base64String = base64String.substring(0, base64String.length - 1) + '=';\n        } else if (bytes.length % 3 === 1) {\n          base64String = base64String.substring(0, base64String.length - 2) + '==';\n        }\n        return base64String;\n      }\n\n      // Serialize a value, afterwards executing a callback (which usually\n      // instructs the `setItem()` callback/promise to be executed). This is how\n      // we store binary data with localStorage.\n      function serialize(value, callback) {\n        var valueType = '';\n        if (value) {\n          valueType = toString$1.call(value);\n        }\n\n        // Cannot use `value instanceof ArrayBuffer` or such here, as these\n        // checks fail when running the tests using casper.js...\n        //\n        // TODO: See why those tests fail and use a better solution.\n        if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n          // Convert binary arrays to a string and prefix the string with\n          // a special marker.\n          var buffer;\n          var marker = SERIALIZED_MARKER;\n          if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n          } else {\n            buffer = value.buffer;\n            if (valueType === '[object Int8Array]') {\n              marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n              marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n              marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n              marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n              marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n              marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n              marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n              marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n              marker += TYPE_FLOAT64ARRAY;\n            } else {\n              callback(new Error('Failed to get type for BinaryArray'));\n            }\n          }\n          callback(marker + bufferToString(buffer));\n        } else if (valueType === '[object Blob]') {\n          // Conver the blob to a binaryArray and then to a string.\n          var fileReader = new FileReader();\n          fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n          };\n          fileReader.readAsArrayBuffer(value);\n        } else {\n          try {\n            callback(JSON.stringify(value));\n          } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n            callback(null, e);\n          }\n        }\n      }\n\n      // Deserialize data we've inserted into a value column/field. We place\n      // special markers into our strings to mark them as encoded; this isn't\n      // as nice as a meta field, but it's the only sane thing we can do whilst\n      // keeping localStorage support intact.\n      //\n      // Oftentimes this will just deserialize JSON content, but if we have a\n      // special marker (SERIALIZED_MARKER, defined above), we will extract\n      // some kind of arraybuffer/binary data/typed array out of the string.\n      function deserialize(value) {\n        // If we haven't marked this string as being specially serialized (i.e.\n        // something other than serialized JSON), we can just return it and be\n        // done with it.\n        if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n          return JSON.parse(value);\n        }\n\n        // The following code deals with deserializing some kind of Blob or\n        // TypedArray. First we separate out the type of data we're dealing\n        // with from the data itself.\n        var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n        var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n        var blobType;\n        // Backwards-compatible blob type serialization strategy.\n        // DBs created with older versions of localForage will simply not have the blob type.\n        if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n          var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n          blobType = matcher[1];\n          serializedString = serializedString.substring(matcher[0].length);\n        }\n        var buffer = stringToBuffer(serializedString);\n\n        // Return the right type based on the code/type set during\n        // serialization.\n        switch (type) {\n          case TYPE_ARRAYBUFFER:\n            return buffer;\n          case TYPE_BLOB:\n            return createBlob([buffer], {\n              type: blobType\n            });\n          case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n          case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n          case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n          case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n          case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n          case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n          case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n          case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n          case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n          default:\n            throw new Error('Unkown type: ' + type);\n        }\n      }\n      var localforageSerializer = {\n        serialize: serialize,\n        deserialize: deserialize,\n        stringToBuffer: stringToBuffer,\n        bufferToString: bufferToString\n      };\n\n      /*\n       * Includes code from:\n       *\n       * base64-arraybuffer\n       * https://github.com/niklasvh/base64-arraybuffer\n       *\n       * Copyright (c) 2012 Niklas von Hertzen\n       * Licensed under the MIT license.\n       */\n\n      function createDbTable(t, dbInfo, callback, errorCallback) {\n        t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n      }\n\n      // Open the WebSQL database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n      function _initStorage$1(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n          }\n        }\n        var dbInfoPromise = new Promise$1(function (resolve, reject) {\n          // Open the database; the openDatabase API will automatically\n          // create it for us if it doesn't exist.\n          try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n          } catch (e) {\n            return reject(e);\n          }\n\n          // Create our key/value table if it doesn't exist.\n          dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n              self._dbInfo = dbInfo;\n              resolve();\n            }, function (t, error) {\n              reject(error);\n            });\n          }, reject);\n        });\n        dbInfo.serializer = localforageSerializer;\n        return dbInfoPromise;\n      }\n      function tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n        t.executeSql(sqlStatement, args, callback, function (t, error) {\n          if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n              if (!results.rows.length) {\n                // if the table is missing (was deleted)\n                // re-create it table and retry\n                createDbTable(t, dbInfo, function () {\n                  t.executeSql(sqlStatement, args, callback, errorCallback);\n                }, errorCallback);\n              } else {\n                errorCallback(t, error);\n              }\n            }, errorCallback);\n          } else {\n            errorCallback(t, error);\n          }\n        }, errorCallback);\n      }\n      function getItem$1(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).value : null;\n\n                // Check to see if this is serialized content we need to\n                // unpack.\n                if (result) {\n                  result = dbInfo.serializer.deserialize(result);\n                }\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function iterate$1(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                var rows = results.rows;\n                var length = rows.length;\n                for (var i = 0; i < length; i++) {\n                  var item = rows.item(i);\n                  var result = item.value;\n\n                  // Check to see if this is serialized content\n                  // we need to unpack.\n                  if (result) {\n                    result = dbInfo.serializer.deserialize(result);\n                  }\n                  result = iterator(result, item.key, i + 1);\n\n                  // void(0) prevents problems with redefinition\n                  // of `undefined`.\n                  if (result !== void 0) {\n                    resolve(result);\n                    return;\n                  }\n                }\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function _setItem(key, value, callback, retriesLeft) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n              value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                dbInfo.db.transaction(function (t) {\n                  tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                    resolve(originalValue);\n                  }, function (t, error) {\n                    reject(error);\n                  });\n                }, function (sqlError) {\n                  // The transaction failed; check\n                  // to see if it's a quota error.\n                  if (sqlError.code === sqlError.QUOTA_ERR) {\n                    // We reject the callback outright for now, but\n                    // it's worth trying to re-run the transaction.\n                    // Even if the user accepts the prompt to use\n                    // more storage on Safari, this error will\n                    // be called.\n                    //\n                    // Try to re-run the transaction.\n                    if (retriesLeft > 0) {\n                      resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                      return;\n                    }\n                    reject(sqlError);\n                  }\n                });\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function setItem$1(key, value, callback) {\n        return _setItem.apply(this, [key, value, callback, 1]);\n      }\n      function removeItem$1(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // Deletes every item in the table.\n      // TODO: Find out if this resets the AUTO_INCREMENT number.\n      function clear$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // Does a simple `COUNT(key)` to get the number of items stored in\n      // localForage.\n      function length$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              // Ahhh, SQL makes this one soooooo easy.\n              tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                var result = results.rows.item(0).c;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // Return the key located at key index X; essentially gets the key from a\n      // `WHERE id = ?`. This is the most efficient way I can think to implement\n      // this rarely-used (in my experience) part of the API, but it can seem\n      // inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n      // the ID of each key will change every time it's updated. Perhaps a stored\n      // procedure for the `setItem()` SQL would solve this problem?\n      // TODO: Don't change ID on `setItem()`.\n      function key$1(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).key : null;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function keys$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                var keys = [];\n                for (var i = 0; i < results.rows.length; i++) {\n                  keys.push(results.rows.item(i).key);\n                }\n                resolve(keys);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // https://www.w3.org/TR/webdatabase/#databases\n      // > There is no way to enumerate or delete the databases available for an origin from this API.\n      function getAllStoreNames(db) {\n        return new Promise$1(function (resolve, reject) {\n          db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n              var storeNames = [];\n              for (var i = 0; i < results.rows.length; i++) {\n                storeNames.push(results.rows.item(i).name);\n              }\n              resolve({\n                db: db,\n                storeNames: storeNames\n              });\n            }, function (t, error) {\n              reject(error);\n            });\n          }, function (sqlError) {\n            reject(sqlError);\n          });\n        });\n      }\n      function dropInstance$1(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        var currentConfig = this.config();\n        options = typeof options !== 'function' && options || {};\n        if (!options.name) {\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n        var self = this;\n        var promise;\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n              // use the db reference of the current instance\n              db = self._dbInfo.db;\n            } else {\n              db = openDatabase(options.name, '', '', 0);\n            }\n            if (!options.storeName) {\n              // drop all database tables\n              resolve(getAllStoreNames(db));\n            } else {\n              resolve({\n                db: db,\n                storeNames: [options.storeName]\n              });\n            }\n          }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n              operationInfo.db.transaction(function (t) {\n                function dropTable(storeName) {\n                  return new Promise$1(function (resolve, reject) {\n                    t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                      resolve();\n                    }, function (t, error) {\n                      reject(error);\n                    });\n                  });\n                }\n                var operations = [];\n                for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                  operations.push(dropTable(operationInfo.storeNames[i]));\n                }\n                Promise$1.all(operations).then(function () {\n                  resolve();\n                })[\"catch\"](function (e) {\n                  reject(e);\n                });\n              }, function (sqlError) {\n                reject(sqlError);\n              });\n            });\n          });\n        }\n        executeCallback(promise, callback);\n        return promise;\n      }\n      var webSQLStorage = {\n        _driver: 'webSQLStorage',\n        _initStorage: _initStorage$1,\n        _support: isWebSQLValid(),\n        iterate: iterate$1,\n        getItem: getItem$1,\n        setItem: setItem$1,\n        removeItem: removeItem$1,\n        clear: clear$1,\n        length: length$1,\n        key: key$1,\n        keys: keys$1,\n        dropInstance: dropInstance$1\n      };\n      function isLocalStorageValid() {\n        try {\n          return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n          // in IE8 typeof localStorage.setItem === 'object'\n          !!localStorage.setItem;\n        } catch (e) {\n          return false;\n        }\n      }\n      function _getKeyPrefix(options, defaultConfig) {\n        var keyPrefix = options.name + '/';\n        if (options.storeName !== defaultConfig.storeName) {\n          keyPrefix += options.storeName + '/';\n        }\n        return keyPrefix;\n      }\n\n      // Check if localStorage throws when saving an item\n      function checkIfLocalStorageThrows() {\n        var localStorageTestKey = '_localforage_support_test';\n        try {\n          localStorage.setItem(localStorageTestKey, true);\n          localStorage.removeItem(localStorageTestKey);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n\n      // Check if localStorage is usable and allows to save an item\n      // This method checks if localStorage is usable in Safari Private Browsing\n      // mode, or in any other case where the available quota for localStorage\n      // is 0 and there wasn't any saved items yet.\n      function _isLocalStorageUsable() {\n        return !checkIfLocalStorageThrows() || localStorage.length > 0;\n      }\n\n      // Config the localStorage backend, using options set in the config.\n      function _initStorage$2(options) {\n        var self = this;\n        var dbInfo = {};\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        }\n        dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n        if (!_isLocalStorageUsable()) {\n          return Promise$1.reject();\n        }\n        self._dbInfo = dbInfo;\n        dbInfo.serializer = localforageSerializer;\n        return Promise$1.resolve();\n      }\n\n      // Remove all keys from the datastore, effectively destroying all data in\n      // the app's key/value store!\n      function clear$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var keyPrefix = self._dbInfo.keyPrefix;\n          for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) === 0) {\n              localStorage.removeItem(key);\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // Retrieve an item from the store. Unlike the original async_storage\n      // library in Gaia, we don't modify return values at all. If a key's value\n      // is `undefined`, we pass that value to the callback function.\n      function getItem$2(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n          // If a result was found, parse it from the serialized\n          // string into a JS object. If result isn't truthy, the key\n          // is likely undefined and we'll pass it straight to the\n          // callback.\n          if (result) {\n            result = dbInfo.serializer.deserialize(result);\n          }\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // Iterate over all items in the store.\n      function iterate$2(iterator, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var keyPrefix = dbInfo.keyPrefix;\n          var keyPrefixLength = keyPrefix.length;\n          var length = localStorage.length;\n\n          // We use a dedicated iterator instead of the `i` variable below\n          // so other keys we fetch in localStorage aren't counted in\n          // the `iterationNumber` argument passed to the `iterate()`\n          // callback.\n          //\n          // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n          var iterationNumber = 1;\n          for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n              continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n              value = dbInfo.serializer.deserialize(value);\n            }\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n            if (value !== void 0) {\n              return value;\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // Same as localStorage's key() method, except takes a callback.\n      function key$2(n, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result;\n          try {\n            result = localStorage.key(n);\n          } catch (error) {\n            result = null;\n          }\n\n          // Remove the prefix from the key, if a key is found.\n          if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n          }\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function keys$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var length = localStorage.length;\n          var keys = [];\n          for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n              keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n          }\n          return keys;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // Supply the number of keys in the datastore to the callback function.\n      function length$2(callback) {\n        var self = this;\n        var promise = self.keys().then(function (keys) {\n          return keys.length;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // Remove an item from the store, nice and simple.\n      function removeItem$2(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          localStorage.removeItem(dbInfo.keyPrefix + key);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      // Set a key's value and run an optional callback once the value is set.\n      // Unlike Gaia's implementation, the callback function is passed the value,\n      // in case you want to operate on that value only after you're sure it\n      // saved, or something like that.\n      function setItem$2(key, value, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          // Convert undefined values to null.\n          // https://github.com/mozilla/localForage/pull/42\n          if (value === undefined) {\n            value = null;\n          }\n\n          // Save the original value to pass to the callback.\n          var originalValue = value;\n          return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                try {\n                  localStorage.setItem(dbInfo.keyPrefix + key, value);\n                  resolve(originalValue);\n                } catch (e) {\n                  // localStorage capacity exceeded.\n                  // TODO: Make this a specific error/event.\n                  if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                    reject(e);\n                  }\n                  reject(e);\n                }\n              }\n            });\n          });\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n      function dropInstance$2(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        options = typeof options !== 'function' && options || {};\n        if (!options.name) {\n          var currentConfig = this.config();\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n        var self = this;\n        var promise;\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n              resolve(options.name + '/');\n            } else {\n              resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n          }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n              var key = localStorage.key(i);\n              if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n              }\n            }\n          });\n        }\n        executeCallback(promise, callback);\n        return promise;\n      }\n      var localStorageWrapper = {\n        _driver: 'localStorageWrapper',\n        _initStorage: _initStorage$2,\n        _support: isLocalStorageValid(),\n        iterate: iterate$2,\n        getItem: getItem$2,\n        setItem: setItem$2,\n        removeItem: removeItem$2,\n        clear: clear$2,\n        length: length$2,\n        key: key$2,\n        keys: keys$2,\n        dropInstance: dropInstance$2\n      };\n      var sameValue = function sameValue(x, y) {\n        return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n      };\n      var includes = function includes(array, searchElement) {\n        var len = array.length;\n        var i = 0;\n        while (i < len) {\n          if (sameValue(array[i], searchElement)) {\n            return true;\n          }\n          i++;\n        }\n        return false;\n      };\n      var isArray = Array.isArray || function (arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n      };\n\n      // Drivers are stored here when `defineDriver()` is called.\n      // They are shared across all instances of localForage.\n      var DefinedDrivers = {};\n      var DriverSupport = {};\n      var DefaultDrivers = {\n        INDEXEDDB: asyncStorage,\n        WEBSQL: webSQLStorage,\n        LOCALSTORAGE: localStorageWrapper\n      };\n      var DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n      var OptionalDriverMethods = ['dropInstance'];\n      var LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n      var DefaultConfig = {\n        description: '',\n        driver: DefaultDriverOrder.slice(),\n        name: 'localforage',\n        // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n        // we can use without a prompt.\n        size: 4980736,\n        storeName: 'keyvaluepairs',\n        version: 1.0\n      };\n      function callWhenReady(localForageInstance, libraryMethod) {\n        localForageInstance[libraryMethod] = function () {\n          var _args = arguments;\n          return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n          });\n        };\n      }\n      function extend() {\n        for (var i = 1; i < arguments.length; i++) {\n          var arg = arguments[i];\n          if (arg) {\n            for (var _key in arg) {\n              if (arg.hasOwnProperty(_key)) {\n                if (isArray(arg[_key])) {\n                  arguments[0][_key] = arg[_key].slice();\n                } else {\n                  arguments[0][_key] = arg[_key];\n                }\n              }\n            }\n          }\n        }\n        return arguments[0];\n      }\n      var LocalForage = function () {\n        function LocalForage(options) {\n          _classCallCheck(this, LocalForage);\n          for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n              var driver = DefaultDrivers[driverTypeKey];\n              var driverName = driver._driver;\n              this[driverTypeKey] = driverName;\n              if (!DefinedDrivers[driverName]) {\n                // we don't need to wait for the promise,\n                // since the default drivers can be defined\n                // in a blocking manner\n                this.defineDriver(driver);\n              }\n            }\n          }\n          this._defaultConfig = extend({}, DefaultConfig);\n          this._config = extend({}, this._defaultConfig, options);\n          this._driverSet = null;\n          this._initDriver = null;\n          this._ready = false;\n          this._dbInfo = null;\n          this._wrapLibraryMethodsWithReady();\n          this.setDriver(this._config.driver)[\"catch\"](function () {});\n        }\n\n        // Set any config values for localForage; can be called anytime before\n        // the first API call (e.g. `getItem`, `setItem`).\n        // We loop through options so we don't overwrite existing config\n        // values.\n\n        LocalForage.prototype.config = function config(options) {\n          // If the options argument is an object, we use it to set values.\n          // Otherwise, we return either a specified config value or all\n          // config values.\n          if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n              return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n            for (var i in options) {\n              if (i === 'storeName') {\n                options[i] = options[i].replace(/\\W/g, '_');\n              }\n              if (i === 'version' && typeof options[i] !== 'number') {\n                return new Error('Database version must be a number.');\n              }\n              this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n              return this.setDriver(this._config.driver);\n            }\n            return true;\n          } else if (typeof options === 'string') {\n            return this._config[options];\n          } else {\n            return this._config;\n          }\n        };\n\n        // Used to define a custom driver, shared across all instances of\n        // localForage.\n\n        LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n          var promise = new Promise$1(function (resolve, reject) {\n            try {\n              var driverName = driverObject._driver;\n              var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n              // A driver name should be defined and not overlap with the\n              // library-defined, default drivers.\n              if (!driverObject._driver) {\n                reject(complianceError);\n                return;\n              }\n              var driverMethods = LibraryMethods.concat('_initStorage');\n              for (var i = 0, len = driverMethods.length; i < len; i++) {\n                var driverMethodName = driverMethods[i];\n\n                // when the property is there,\n                // it should be a method even when optional\n                var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                  reject(complianceError);\n                  return;\n                }\n              }\n              var configureMissingMethods = function configureMissingMethods() {\n                var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                  return function () {\n                    var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                    var promise = Promise$1.reject(error);\n                    executeCallback(promise, arguments[arguments.length - 1]);\n                    return promise;\n                  };\n                };\n                for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                  var optionalDriverMethod = OptionalDriverMethods[_i];\n                  if (!driverObject[optionalDriverMethod]) {\n                    driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                  }\n                }\n              };\n              configureMissingMethods();\n              var setDriverSupport = function setDriverSupport(support) {\n                if (DefinedDrivers[driverName]) {\n                  console.info('Redefining LocalForage driver: ' + driverName);\n                }\n                DefinedDrivers[driverName] = driverObject;\n                DriverSupport[driverName] = support;\n                // don't use a then, so that we can define\n                // drivers that have simple _support methods\n                // in a blocking manner\n                resolve();\n              };\n              if ('_support' in driverObject) {\n                if (driverObject._support && typeof driverObject._support === 'function') {\n                  driverObject._support().then(setDriverSupport, reject);\n                } else {\n                  setDriverSupport(!!driverObject._support);\n                }\n              } else {\n                setDriverSupport(true);\n              }\n            } catch (e) {\n              reject(e);\n            }\n          });\n          executeTwoCallbacks(promise, callback, errorCallback);\n          return promise;\n        };\n        LocalForage.prototype.driver = function driver() {\n          return this._driver || null;\n        };\n        LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n          var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n          executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n          return getDriverPromise;\n        };\n        LocalForage.prototype.getSerializer = function getSerializer(callback) {\n          var serializerPromise = Promise$1.resolve(localforageSerializer);\n          executeTwoCallbacks(serializerPromise, callback);\n          return serializerPromise;\n        };\n        LocalForage.prototype.ready = function ready(callback) {\n          var self = this;\n          var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n              self._ready = self._initDriver();\n            }\n            return self._ready;\n          });\n          executeTwoCallbacks(promise, callback, callback);\n          return promise;\n        };\n        LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n          var self = this;\n          if (!isArray(drivers)) {\n            drivers = [drivers];\n          }\n          var supportedDrivers = this._getSupportedDrivers(drivers);\n          function setDriverToConfig() {\n            self._config.driver = self.driver();\n          }\n          function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n          }\n          function initDriver(supportedDrivers) {\n            return function () {\n              var currentDriverIndex = 0;\n              function driverPromiseLoop() {\n                while (currentDriverIndex < supportedDrivers.length) {\n                  var driverName = supportedDrivers[currentDriverIndex];\n                  currentDriverIndex++;\n                  self._dbInfo = null;\n                  self._ready = null;\n                  return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                }\n                setDriverToConfig();\n                var error = new Error('No available storage method found.');\n                self._driverSet = Promise$1.reject(error);\n                return self._driverSet;\n              }\n              return driverPromiseLoop();\n            };\n          }\n\n          // There might be a driver initialization in progress\n          // so wait for it to finish in order to avoid a possible\n          // race condition to set _dbInfo\n          var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n          }) : Promise$1.resolve();\n          this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n            return self.getDriver(driverName).then(function (driver) {\n              self._driver = driver._driver;\n              setDriverToConfig();\n              self._wrapLibraryMethodsWithReady();\n              self._initDriver = initDriver(supportedDrivers);\n            });\n          })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n          });\n          executeTwoCallbacks(this._driverSet, callback, errorCallback);\n          return this._driverSet;\n        };\n        LocalForage.prototype.supports = function supports(driverName) {\n          return !!DriverSupport[driverName];\n        };\n        LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n          extend(this, libraryMethodsAndProperties);\n        };\n        LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n          var supportedDrivers = [];\n          for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n              supportedDrivers.push(driverName);\n            }\n          }\n          return supportedDrivers;\n        };\n        LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n          // Add a stub for each driver API method that delays the call to the\n          // corresponding driver method until localForage is ready. These stubs\n          // will be replaced by the driver methods as soon as the driver is\n          // loaded, so there is no performance impact.\n          for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n          }\n        };\n        LocalForage.prototype.createInstance = function createInstance(options) {\n          return new LocalForage(options);\n        };\n        return LocalForage;\n      }();\n\n      // The actual localForage object that we expose as a module or via a\n      // global. It's extended by pulling in one of our other libraries.\n\n      var localforage_js = new LocalForage();\n      module.exports = localforage_js;\n    }, {\n      \"3\": 3\n    }]\n  }, {}, [4])(4);\n});","import LocalForage from 'localforage';\n/** @hidden */\nexport const Drivers = {\n  SecureStorage: 'ionicSecureStorage',\n  IndexedDB: LocalForage.INDEXEDDB,\n  LocalStorage: LocalForage.LOCALSTORAGE\n};\nconst defaultConfig = {\n  name: '_ionicstorage',\n  storeName: '_ionickv',\n  dbKey: '_ionickey',\n  driverOrder: [Drivers.SecureStorage, Drivers.IndexedDB, Drivers.LocalStorage]\n};\nexport class Storage {\n  /**\n   * Create a new Storage instance using the order of drivers and any additional config\n   * options to pass to LocalForage.\n   *\n   * Possible default driverOrder options are: ['indexeddb', 'localstorage'] and the\n   * default is that exact ordering.\n   *\n   * When using Ionic Secure Storage (enterprise only), use ['ionicSecureStorage', 'indexeddb', 'localstorage'] to ensure\n   * Secure Storage is used when available, or fall back to IndexedDB or LocalStorage on the web.\n   */\n  constructor(config = defaultConfig) {\n    this._db = null;\n    this._secureStorageDriver = null;\n    const actualConfig = Object.assign({}, defaultConfig, config || {});\n    this._config = actualConfig;\n  }\n  async create() {\n    const db = LocalForage.createInstance(this._config);\n    this._db = db;\n    await db.setDriver(this._config.driverOrder || []);\n    return this;\n  }\n  /**\n   * Define a new Driver. Must be called before\n   * initializing the database. Example:\n   *\n   * await storage.defineDriver(myDriver);\n   * await storage.create();\n   */\n  async defineDriver(driver) {\n    if (driver._driver === Drivers.SecureStorage) {\n      this._secureStorageDriver = driver;\n    }\n    return LocalForage.defineDriver(driver);\n  }\n  /**\n   * Get the name of the driver being used.\n   * @returns Name of the driver\n   */\n  get driver() {\n    var _a;\n    return ((_a = this._db) === null || _a === void 0 ? void 0 : _a.driver()) || null;\n  }\n  assertDb() {\n    if (!this._db) {\n      throw new Error('Database not created. Must call create() first');\n    }\n    return this._db;\n  }\n  /**\n   * Get the value associated with the given key.\n   * @param key the key to identify this value\n   * @returns Returns a promise with the value of the given key\n   */\n  get(key) {\n    const db = this.assertDb();\n    return db.getItem(key);\n  }\n  /**\n   * Set the value for the given key.\n   * @param key the key to identify this value\n   * @param value the value for this key\n   * @returns Returns a promise that resolves when the key and value are set\n   */\n  set(key, value) {\n    const db = this.assertDb();\n    return db.setItem(key, value);\n  }\n  /**\n   * Remove any value associated with this key.\n   * @param key the key to identify this value\n   * @returns Returns a promise that resolves when the value is removed\n   */\n  remove(key) {\n    const db = this.assertDb();\n    return db.removeItem(key);\n  }\n  /**\n   * Clear the entire key value store. WARNING: HOT!\n   * @returns Returns a promise that resolves when the store is cleared\n   */\n  clear() {\n    const db = this.assertDb();\n    return db.clear();\n  }\n  /**\n   * @returns Returns a promise that resolves with the number of keys stored.\n   */\n  length() {\n    const db = this.assertDb();\n    return db.length();\n  }\n  /**\n   * @returns Returns a promise that resolves with the keys in the store.\n   */\n  keys() {\n    const db = this.assertDb();\n    return db.keys();\n  }\n  /**\n   * Iterate through each key,value pair.\n   * @param iteratorCallback a callback of the form (value, key, iterationNumber)\n   * @returns Returns a promise that resolves when the iteration has finished.\n   */\n  forEach(iteratorCallback) {\n    const db = this.assertDb();\n    return db.iterate(iteratorCallback);\n  }\n  setEncryptionKey(key) {\n    var _a;\n    if (!this._secureStorageDriver) {\n      throw new Error('@ionic-enterprise/secure-storage not installed. Encryption support not available');\n    } else {\n      (_a = this._secureStorageDriver) === null || _a === void 0 ? void 0 : _a.setEncryptionKey(key);\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, NgModule } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nexport { Storage } from '@ionic/storage';\nconst StorageConfigToken = new InjectionToken('STORAGE_CONFIG_TOKEN');\nclass NoopStorage extends Storage {\n  constructor() {\n    super();\n  }\n  async create() {\n    return this;\n  }\n  async defineDriver() {}\n  get driver() {\n    return 'noop';\n  }\n  async get(key) {\n    return null;\n  }\n  async set(key, value) {}\n  async remove(key) {}\n  async clear() {}\n  async length() {\n    return 0;\n  }\n  async keys() {\n    return [];\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  async forEach(iteratorCallback) {}\n  setEncryptionKey(key) {}\n}\nfunction provideStorage(platformId, storageConfig) {\n  if (isPlatformServer(platformId)) {\n    // When running in a server context return the NoopStorage\n    return new NoopStorage();\n  }\n  return new Storage(storageConfig);\n}\nlet IonicStorageModule = /*#__PURE__*/(() => {\n  class IonicStorageModule {\n    static forRoot(storageConfig = null) {\n      return {\n        ngModule: IonicStorageModule,\n        providers: [{\n          provide: StorageConfigToken,\n          useValue: storageConfig\n        }, {\n          provide: Storage,\n          useFactory: provideStorage,\n          deps: [PLATFORM_ID, StorageConfigToken]\n        }]\n      };\n    }\n  }\n  IonicStorageModule.ɵfac = function IonicStorageModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || IonicStorageModule)();\n  };\n  IonicStorageModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: IonicStorageModule\n  });\n  IonicStorageModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return IonicStorageModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { IonicStorageModule, StorageConfigToken, provideStorage };\n"],"mappings":"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","names":["require_localforage","__commonJSMin","exports","module","f","g","define","e","t","n","r","s","o","u","a","__require","i","l","_dereq_","global","Mutation","scheduleDrain","called","observer","nextTick","element","channel","scriptEl","draining","queue","oldQueue","len","immediate","task","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","safelyResolveThenable","onRejected","onFulfilled","promise","unwrap","QueueItem","value","func","returnValue","self","result","tryCatch","getThen","thenable","error","obj","then","onError","onSuccess","tryToUnwrap","out","resolve","reject","reason","all","iterable","values","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","_classCallCheck","instance","Constructor","getIDB","idb","isIndexedDBValid","isSafari","hasFetch","createBlob","parts","properties","Builder","builder","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","toString","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","length","buf","arr","_checkBlobSupportWithoutCaching","txn","blob","matchedChrome","matchedEdge","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","_advanceReadiness","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","dbArgs","openreq","db","ex","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","base64","_decodeBlob","encodedBlob","arrayBuff","_isEncodedBlob","_fullyReady","_tryReconnect","forages","forage","createTransaction","mode","retries","tx","_initStorage","options","initPromises","ignoreErrors","j","k","getItem","transaction","store","req","iterate","iterator","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","advanced","keys","dropInstance","currentConfig","isCurrentDb","dbPromise","newVersion","dropObjectPromise","_forage2","dropDBPromise","_forage","asyncStorage","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","p","encoded1","encoded2","encoded3","encoded4","buffer","bytes","bufferToString","base64String","serialize","valueType","marker","fileReader","str","deserialize","type","blobType","matcher","localforageSerializer","createDbTable","_initStorage$1","dbInfoPromise","tryExecuteSql","sqlStatement","args","results","getItem$1","iterate$1","rows","item","_setItem","retriesLeft","originalValue","sqlError","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","storeName","operations","webSQLStorage","isLocalStorageValid","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","LocalForage","driverTypeKey","driver","driverName","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","getDriverPromise","serializerPromise","drivers","supportedDrivers","setDriverToConfig","extendSelfWithDriver","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","libraryMethodsAndProperties","localforage_js","import_localforage","Drivers","LocalForage","defaultConfig","Storage","config","actualConfig","__async","db","driver","_a","key","value","iteratorCallback","StorageConfigToken","InjectionToken","NoopStorage","Storage","__async","key","value","iteratorCallback","provideStorage","platformId","storageConfig","isPlatformServer","IonicStorageModule","PLATFORM_ID","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector"],"x_google_ignoreList":[0,1,2]}