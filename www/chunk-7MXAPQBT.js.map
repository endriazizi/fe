{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, h, d as Host, g as getElement } from './index-4DxY6_gG.js';\nimport { f as addEventListener, m as removeEventListener, a as renderHiddenInput } from './helpers-8KSQQGQy.js';\nimport { i as isOptionSelected } from './compare-with-utils-sObYyvOy.js';\nimport { h as hostContext, c as createColorClasses } from './theme-DiVJyqlX.js';\nimport { b as getIonMode } from './ionic-global-CTSyufhF.js';\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;max-width:100%;min-height:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}.radio-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;min-height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.radio-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.radio-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between) .radio-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.radio-justify-start) .radio-wrapper{-ms-flex-pack:start;justify-content:start}:host(.radio-justify-end) .radio-wrapper{-ms-flex-pack:end;justify-content:end}:host(.radio-alignment-start) .radio-wrapper{-ms-flex-align:start;align-items:start}:host(.radio-alignment-center) .radio-wrapper{-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between),:host(.radio-justify-start),:host(.radio-justify-end),:host(.radio-alignment-start),:host(.radio-alignment-center){display:block}:host(.radio-label-placement-start) .radio-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.radio-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-end) .radio-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.radio-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.radio-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px}:host(.radio-label-placement-stacked) .radio-wrapper{-ms-flex-direction:column;flex-direction:column}:host(.radio-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host{--color-checked:var(--ion-color-primary, #0054e9)}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{-webkit-margin-start:0;margin-inline-start:0}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:0.125rem;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #1a65eb);content:\\\"\\\";opacity:0.2}:host(.ion-focused) .radio-icon::after{inset-inline-start:-9px}.native-wrapper .radio-icon{width:0.9375rem;height:1.5rem}\";\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;max-width:100%;min-height:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}.radio-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;min-height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.radio-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.radio-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between) .radio-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.radio-justify-start) .radio-wrapper{-ms-flex-pack:start;justify-content:start}:host(.radio-justify-end) .radio-wrapper{-ms-flex-pack:end;justify-content:end}:host(.radio-alignment-start) .radio-wrapper{-ms-flex-align:start;align-items:start}:host(.radio-alignment-center) .radio-wrapper{-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between),:host(.radio-justify-start),:host(.radio-justify-end),:host(.radio-alignment-start),:host(.radio-alignment-center){display:block}:host(.radio-label-placement-start) .radio-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.radio-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-end) .radio-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.radio-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.radio-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px}:host(.radio-label-placement-stacked) .radio-wrapper{-ms-flex-direction:column;flex-direction:column}:host(.radio-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host{--color:rgb(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #0054e9);--border-width:0.125rem;--border-style:solid;--border-radius:50%}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled) .label-text-wrapper{opacity:0.38}:host(.radio-disabled) .native-wrapper{opacity:0.63}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #1a65eb);content:\\\"\\\";opacity:0.2}.native-wrapper .radio-icon{width:1.25rem;height:1.25rem}\";\nconst Radio = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.inputId = `ion-rb-${radioButtonIds++}`;\n    this.radioGroup = null;\n    /**\n     * If `true`, the radio is selected.\n     */\n    this.checked = false;\n    /**\n     * The tabindex of the radio button.\n     * @internal\n     */\n    this.buttonTabindex = -1;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the radio.\n     */\n    this.disabled = false;\n    /**\n     * Where to place the label relative to the radio.\n     * `\"start\"`: The label will appear to the left of the radio in LTR and to the right in RTL.\n     * `\"end\"`: The label will appear to the right of the radio in LTR and to the left in RTL.\n     * `\"fixed\"`: The label has the same behavior as `\"start\"` except it also has a fixed width. Long text will be truncated with ellipses (\"...\").\n     * `\"stacked\"`: The label will appear above the radio regardless of the direction. The alignment of the label can be controlled with the `alignment` property.\n     */\n    this.labelPlacement = 'start';\n    this.updateState = () => {\n      if (this.radioGroup) {\n        const {\n          compareWith,\n          value: radioGroupValue\n        } = this.radioGroup;\n        this.checked = isOptionSelected(radioGroupValue, this.value, compareWith);\n      }\n    };\n    this.onClick = () => {\n      const {\n        radioGroup,\n        checked,\n        disabled\n      } = this;\n      if (disabled) {\n        return;\n      }\n      /**\n       * The modern control does not use a native input\n       * inside of the radio host, so we cannot rely on the\n       * ev.preventDefault() behavior above. If the radio\n       * is checked and the parent radio group allows for empty\n       * selection, then we can set the checked state to false.\n       * Otherwise, the checked state should always be set\n       * to true because the checked state cannot be toggled.\n       */\n      if (checked && (radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.allowEmptySelection)) {\n        this.checked = false;\n      } else {\n        this.checked = true;\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  valueChanged() {\n    /**\n     * The new value of the radio may\n     * match the radio group's value,\n     * so we see if it should be checked.\n     */\n    this.updateState();\n  }\n  componentDidLoad() {\n    /**\n     * The value may be `undefined` if it\n     * gets set before the radio is\n     * rendered. This ensures that the radio\n     * is checked if the value matches. This\n     * happens most often when Angular is\n     * rendering the radio.\n     */\n    this.updateState();\n  }\n  /** @internal */\n  async setFocus(ev) {\n    if (ev !== undefined) {\n      ev.stopPropagation();\n      ev.preventDefault();\n    }\n    this.el.focus();\n  }\n  /** @internal */\n  async setButtonTabindex(value) {\n    this.buttonTabindex = value;\n  }\n  connectedCallback() {\n    if (this.value === undefined) {\n      this.value = this.inputId;\n    }\n    const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n    if (radioGroup) {\n      this.updateState();\n      addEventListener(radioGroup, 'ionValueChange', this.updateState);\n    }\n  }\n  disconnectedCallback() {\n    const radioGroup = this.radioGroup;\n    if (radioGroup) {\n      removeEventListener(radioGroup, 'ionValueChange', this.updateState);\n      this.radioGroup = null;\n    }\n  }\n  get hasLabel() {\n    return this.el.textContent !== '';\n  }\n  renderRadioControl() {\n    return h(\"div\", {\n      class: \"radio-icon\",\n      part: \"container\"\n    }, h(\"div\", {\n      class: \"radio-inner\",\n      part: \"mark\"\n    }), h(\"div\", {\n      class: \"radio-ripple\"\n    }));\n  }\n  render() {\n    const {\n      checked,\n      disabled,\n      color,\n      el,\n      justify,\n      labelPlacement,\n      hasLabel,\n      buttonTabindex,\n      alignment\n    } = this;\n    const mode = getIonMode(this);\n    const inItem = hostContext('ion-item', el);\n    return h(Host, {\n      key: '3353b28172b7f837d4b38964169b5b5f4ba02788',\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onClick: this.onClick,\n      class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': inItem,\n        'radio-checked': checked,\n        'radio-disabled': disabled,\n        [`radio-justify-${justify}`]: justify !== undefined,\n        [`radio-alignment-${alignment}`]: alignment !== undefined,\n        [`radio-label-placement-${labelPlacement}`]: true,\n        // Focus and active styling should not apply when the radio is in an item\n        'ion-activatable': !inItem,\n        'ion-focusable': !inItem\n      }),\n      role: \"radio\",\n      \"aria-checked\": checked ? 'true' : 'false',\n      \"aria-disabled\": disabled ? 'true' : null,\n      tabindex: buttonTabindex\n    }, h(\"label\", {\n      key: '418a0a48366ff900e97da123abf665bbbda87fb7',\n      class: \"radio-wrapper\"\n    }, h(\"div\", {\n      key: '6e5acdd8c8f5d0ad26632a65396afef8094153d1',\n      class: {\n        'label-text-wrapper': true,\n        'label-text-wrapper-hidden': !hasLabel\n      },\n      part: \"label\"\n    }, h(\"slot\", {\n      key: '10b157162cd283d624153c747679609cf0bbf11e'\n    })), h(\"div\", {\n      key: '4c45cca95cb105cd6df1025a26e3c045272184a0',\n      class: \"native-wrapper\"\n    }, this.renderRadioControl())));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"value\": [\"valueChanged\"]\n    };\n  }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n  ios: radioIosCss,\n  md: radioMdCss\n};\nconst radioGroupIosCss = \"ion-radio-group{vertical-align:top}.radio-group-wrapper{display:inline}.radio-group-top{line-height:1.5}.radio-group-top .error-text{display:none;color:var(--ion-color-danger, #c5000f)}.radio-group-top .helper-text{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}.ion-touched.ion-invalid .radio-group-top .error-text{display:block}.ion-touched.ion-invalid .radio-group-top .helper-text{display:none}ion-list .radio-group-top{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}\";\nconst radioGroupMdCss = \"ion-radio-group{vertical-align:top}.radio-group-wrapper{display:inline}.radio-group-top{line-height:1.5}.radio-group-top .error-text{display:none;color:var(--ion-color-danger, #c5000f)}.radio-group-top .helper-text{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}.ion-touched.ion-invalid .radio-group-top .error-text{display:block}.ion-touched.ion-invalid .radio-group-top .helper-text{display:none}ion-list .radio-group-top{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}\";\nconst RadioGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.helperTextId = `${this.inputId}-helper-text`;\n    this.errorTextId = `${this.inputId}-error-text`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    this.setRadioTabindex = value => {\n      const radios = this.getRadios();\n      // Get the first radio that is not disabled and the checked one\n      const first = radios.find(radio => !radio.disabled);\n      const checked = radios.find(radio => radio.value === value && !radio.disabled);\n      if (!first && !checked) {\n        return;\n      }\n      // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n      const focusable = checked || first;\n      for (const radio of radios) {\n        const tabindex = radio === focusable ? 0 : -1;\n        radio.setButtonTabindex(tabindex);\n      }\n    };\n    this.onClick = ev => {\n      ev.preventDefault();\n      /**\n       * The Radio Group component mandates that only one radio button\n       * within the group can be selected at any given time. Since `ion-radio`\n       * is a shadow DOM component, it cannot natively perform this behavior\n       * using the `name` attribute.\n       */\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n      /**\n       * Our current disabled prop definition causes Stencil to mark it\n       * as optional. While this is not desired, fixing this behavior\n       * in Stencil is a significant breaking change, so this effort is\n       * being de-risked in STENCIL-917. Until then, we compromise\n       * here by checking for falsy `disabled` values instead of strictly\n       * checking `disabled === false`.\n       */\n      if (selectedRadio && !selectedRadio.disabled) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n        if (newValue !== currentValue) {\n          this.value = newValue;\n          this.emitValueChange(ev);\n        } else if (this.allowEmptySelection) {\n          this.value = undefined;\n          this.emitValueChange(ev);\n        }\n      }\n    };\n  }\n  valueChanged(value) {\n    this.setRadioTabindex(value);\n    this.ionValueChange.emit({\n      value\n    });\n  }\n  componentDidLoad() {\n    /**\n     * There's an issue when assigning a value to the radio group\n     * within the Angular primary content (rendering within the\n     * app component template). When the template is isolated to a route,\n     * the value is assigned correctly.\n     * To address this issue, we need to ensure that the watcher is\n     * called after the component has finished loading,\n     * allowing the emit to be dispatched correctly.\n     */\n    this.valueChanged(this.value);\n  }\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n    if (header) {\n      const label = this.label = header.querySelector('ion-label');\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n  getRadios() {\n    return Array.from(this.el.querySelectorAll('ion-radio'));\n  }\n  /**\n   * Emits an `ionChange` event.\n   *\n   * This API should be called for user committed changes.\n   * This API should not be used for external value changes.\n   */\n  emitValueChange(event) {\n    const {\n      value\n    } = this;\n    this.ionChange.emit({\n      value,\n      event\n    });\n  }\n  onKeydown(ev) {\n    // We don't want the value to automatically change/emit when the radio group is part of a select interface\n    // as this will cause the interface to close when navigating through the radio group options\n    const inSelectInterface = !!this.el.closest('ion-select-popover') || !!this.el.closest('ion-select-modal');\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    }\n    // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n    const radios = this.getRadios().filter(radio => !radio.disabled);\n    // Only move the radio if the current focus is in the radio group\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex(radio => radio === ev.target);\n      const current = radios[index];\n      let next;\n      // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n      if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n        next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n      }\n      // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n        next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n      }\n      if (next && radios.includes(next)) {\n        next.setFocus(ev);\n        if (!inSelectInterface) {\n          this.value = next.value;\n          this.emitValueChange(ev);\n        }\n      }\n      // Update the radio group value when a user presses the\n      // space bar on top of a selected radio\n      if ([' '].includes(ev.key)) {\n        const previousValue = this.value;\n        this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value;\n        if (previousValue !== this.value || this.allowEmptySelection) {\n          /**\n           * Value change should only be emitted if the value is different,\n           * such as selecting a new radio with the space bar or if\n           * the radio group allows for empty selection and the user\n           * is deselecting a checked radio.\n           */\n          this.emitValueChange(ev);\n        }\n        // Prevent browsers from jumping\n        // to the bottom of the screen\n        ev.preventDefault();\n      }\n    }\n  }\n  /** @internal */\n  async setFocus() {\n    const radioToFocus = this.getRadios().find(r => r.tabIndex !== -1);\n    radioToFocus === null || radioToFocus === void 0 ? void 0 : radioToFocus.setFocus();\n  }\n  /**\n   * Renders the helper text or error text values\n   */\n  renderHintText() {\n    const {\n      helperText,\n      errorText,\n      helperTextId,\n      errorTextId\n    } = this;\n    const hasHintText = !!helperText || !!errorText;\n    if (!hasHintText) {\n      return;\n    }\n    return h(\"div\", {\n      class: \"radio-group-top\"\n    }, h(\"div\", {\n      id: helperTextId,\n      class: \"helper-text\"\n    }, helperText), h(\"div\", {\n      id: errorTextId,\n      class: \"error-text\"\n    }, errorText));\n  }\n  getHintTextID() {\n    const {\n      el,\n      helperText,\n      errorText,\n      helperTextId,\n      errorTextId\n    } = this;\n    if (el.classList.contains('ion-touched') && el.classList.contains('ion-invalid') && errorText) {\n      return errorTextId;\n    }\n    if (helperText) {\n      return helperTextId;\n    }\n    return undefined;\n  }\n  render() {\n    const {\n      label,\n      labelId,\n      el,\n      name,\n      value\n    } = this;\n    const mode = getIonMode(this);\n    renderHiddenInput(true, el, name, value, false);\n    return h(Host, {\n      key: '81b8ebc96b2f383c36717f290d2959cc921ad6e8',\n      role: \"radiogroup\",\n      \"aria-labelledby\": label ? labelId : null,\n      \"aria-describedby\": this.getHintTextID(),\n      \"aria-invalid\": this.getHintTextID() === this.errorTextId,\n      onClick: this.onClick,\n      class: mode\n    }, this.renderHintText(), h(\"div\", {\n      key: '45b09efc10776b889a8f372cba80d25a3fc849da',\n      class: \"radio-group-wrapper\"\n    }, h(\"slot\", {\n      key: '58714934542c2fdd7396de160364f3f06b32e8f8'\n    })));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"value\": [\"valueChanged\"]\n    };\n  }\n};\nlet radioGroupIds = 0;\nRadioGroup.style = {\n  ios: radioGroupIosCss,\n  md: radioGroupMdCss\n};\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };"],"mappings":"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","names":["radioIosCss","radioMdCss","Radio","hostRef","registerInstance","createEvent","radioButtonIds","compareWith","radioGroupValue","isOptionSelected","radioGroup","checked","disabled","ev","__async","value","addEventListener","removeEventListener","h","color","el","justify","labelPlacement","hasLabel","buttonTabindex","alignment","mode","getIonMode","inItem","hostContext","Host","createColorClasses","getElement","radioGroupIosCss","radioGroupMdCss","RadioGroup","radioGroupIds","radios","first","radio","focusable","tabindex","selectedRadio","currentValue","newValue","header","label","event","inSelectInterface","index","current","next","previousValue","radioToFocus","r","helperText","errorText","helperTextId","errorTextId","labelId","name","renderHiddenInput"],"x_google_ignoreList":[0]}