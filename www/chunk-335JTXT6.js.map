{"version":3,"sources":["node_modules/@ionic/core/dist/esm/focus-visible-BmVRXR1y.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst ION_FOCUSED = 'ion-focused';\nconst ION_FOCUSABLE = 'ion-focusable';\nconst FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'Home', 'End'];\nconst startFocusVisible = rootEl => {\n  let currentFocus = [];\n  let keyboardMode = true;\n  const ref = rootEl ? rootEl.shadowRoot : document;\n  const root = rootEl ? rootEl : document.body;\n  const setFocus = elements => {\n    currentFocus.forEach(el => el.classList.remove(ION_FOCUSED));\n    elements.forEach(el => el.classList.add(ION_FOCUSED));\n    currentFocus = elements;\n  };\n  const pointerDown = () => {\n    keyboardMode = false;\n    setFocus([]);\n  };\n  const onKeydown = ev => {\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\n    if (!keyboardMode) {\n      setFocus([]);\n    }\n  };\n  const onFocusin = ev => {\n    if (keyboardMode && ev.composedPath !== undefined) {\n      const toFocus = ev.composedPath().filter(el => {\n        // TODO(FW-2832): type\n        if (el.classList) {\n          return el.classList.contains(ION_FOCUSABLE);\n        }\n        return false;\n      });\n      setFocus(toFocus);\n    }\n  };\n  const onFocusout = () => {\n    if (ref.activeElement === root) {\n      setFocus([]);\n    }\n  };\n  ref.addEventListener('keydown', onKeydown);\n  ref.addEventListener('focusin', onFocusin);\n  ref.addEventListener('focusout', onFocusout);\n  ref.addEventListener('touchstart', pointerDown, {\n    passive: true\n  });\n  ref.addEventListener('mousedown', pointerDown);\n  const destroy = () => {\n    ref.removeEventListener('keydown', onKeydown);\n    ref.removeEventListener('focusin', onFocusin);\n    ref.removeEventListener('focusout', onFocusout);\n    ref.removeEventListener('touchstart', pointerDown);\n    ref.removeEventListener('mousedown', pointerDown);\n  };\n  return {\n    destroy,\n    setFocus\n  };\n};\nexport { startFocusVisible };"],"mappings":"AAGA,IAAMA,EAAc,cACdC,EAAgB,gBAChBC,EAAa,CAAC,MAAO,YAAa,QAAS,SAAU,IAAK,QAAS,QAAS,YAAa,aAAc,UAAW,OAAQ,KAAK,EAC/HC,EAAoBC,GAAU,CAClC,IAAIC,EAAe,CAAC,EAChBC,EAAe,GACbC,EAAMH,EAASA,EAAO,WAAa,SACnCI,EAAOJ,GAAkB,SAAS,KAClCK,EAAWC,GAAY,CAC3BL,EAAa,QAAQM,GAAMA,EAAG,UAAU,OAAOX,CAAW,CAAC,EAC3DU,EAAS,QAAQC,GAAMA,EAAG,UAAU,IAAIX,CAAW,CAAC,EACpDK,EAAeK,CACjB,EACME,EAAc,IAAM,CACxBN,EAAe,GACfG,EAAS,CAAC,CAAC,CACb,EACMI,EAAYC,GAAM,CACtBR,EAAeJ,EAAW,SAASY,EAAG,GAAG,EACpCR,GACHG,EAAS,CAAC,CAAC,CAEf,EACMM,EAAYD,GAAM,CACtB,GAAIR,GAAgBQ,EAAG,eAAiB,OAAW,CACjD,IAAME,EAAUF,EAAG,aAAa,EAAE,OAAOH,GAEnCA,EAAG,UACEA,EAAG,UAAU,SAASV,CAAa,EAErC,EACR,EACDQ,EAASO,CAAO,CAClB,CACF,EACMC,EAAa,IAAM,CACnBV,EAAI,gBAAkBC,GACxBC,EAAS,CAAC,CAAC,CAEf,EACA,OAAAF,EAAI,iBAAiB,UAAWM,CAAS,EACzCN,EAAI,iBAAiB,UAAWQ,CAAS,EACzCR,EAAI,iBAAiB,WAAYU,CAAU,EAC3CV,EAAI,iBAAiB,aAAcK,EAAa,CAC9C,QAAS,EACX,CAAC,EACDL,EAAI,iBAAiB,YAAaK,CAAW,EAQtC,CACL,QARc,IAAM,CACpBL,EAAI,oBAAoB,UAAWM,CAAS,EAC5CN,EAAI,oBAAoB,UAAWQ,CAAS,EAC5CR,EAAI,oBAAoB,WAAYU,CAAU,EAC9CV,EAAI,oBAAoB,aAAcK,CAAW,EACjDL,EAAI,oBAAoB,YAAaK,CAAW,CAClD,EAGE,SAAAH,CACF,CACF","names":["ION_FOCUSED","ION_FOCUSABLE","FOCUS_KEYS","startFocusVisible","rootEl","currentFocus","keyboardMode","ref","root","setFocus","elements","el","pointerDown","onKeydown","ev","onFocusin","toFocus","onFocusout"],"x_google_ignoreList":[0]}