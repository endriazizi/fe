{
  "version": 3,
  "sources": ["src/app/pages/speaker-list/speaker-list.ts", "src/app/pages/speaker-list/speaker-list.html"],
  "sourcesContent": ["import { Component, inject } from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport {\r\n  IonAvatar,\r\n  IonButtons,\r\n  IonCard,\r\n  IonCardContent,\r\n  IonCardHeader,\r\n  IonCol,\r\n  IonContent,\r\n  IonGrid,\r\n  IonHeader,\r\n  IonItem,\r\n  IonLabel,\r\n  IonList,\r\n  IonMenuButton,\r\n  IonRow,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from '@ionic/angular/standalone';\r\nimport { Speaker } from '../../interfaces/conference.interfaces';\r\nimport { ConferenceService } from '../../providers/conference.service';\r\n\r\n@Component({\r\n    selector: 'page-speaker-list',\r\n    templateUrl: 'speaker-list.html',\r\n    styleUrls: ['./speaker-list.scss'],\r\n    imports: [\r\n        IonHeader,\r\n        IonToolbar,\r\n        IonButtons,\r\n        IonMenuButton,\r\n        IonTitle,\r\n        IonContent,\r\n        IonGrid,\r\n        IonRow,\r\n        IonCol,\r\n        IonCard,\r\n        IonCardHeader,\r\n        IonItem,\r\n        IonAvatar,\r\n        IonLabel,\r\n        IonCardContent,\r\n        IonList,\r\n        RouterLink,\r\n    ]\r\n})\r\nexport class SpeakerListPage {\r\n  private confData = inject(ConferenceService);\r\n\r\n  speakers: Speaker[] = [];\r\n\r\n  ionViewDidEnter() {\r\n    this.confData.getSpeakers().subscribe(speakers => {\r\n      this.speakers = speakers;\r\n    });\r\n  }\r\n}\r\n", "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-menu-button></ion-menu-button>\r\n    </ion-buttons>\r\n    <ion-title>Speakers</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content fullscreen=\"true\">\r\n  <ion-header collapse=\"condense\">\r\n    <ion-toolbar>\r\n      <ion-title size=\"large\">Speakers</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n\r\n  <ion-grid fixed>\r\n    <ion-row>\r\n      @for (speaker of speakers; track speaker.id) {\r\n      <ion-col size=\"12\" size-md=\"6\">\r\n        <ion-card class=\"speaker-card\">\r\n          <ion-card-header>\r\n            <ion-item\r\n              detail=\"false\"\r\n              lines=\"none\"\r\n              class=\"speaker-item\"\r\n              routerLink=\"/app/tabs/speakers/speaker-details/{{speaker.id}}\"\r\n            >\r\n              <ion-avatar slot=\"start\">\r\n                <img\r\n                  [src]=\"speaker.profilePic\"\r\n                  [alt]=\"speaker.name + ' profile picture'\"\r\n                />\r\n              </ion-avatar>\r\n              <ion-label>\r\n                <h2>{{speaker.name}}</h2>\r\n                <p>{{speaker.title}}</p>\r\n              </ion-label>\r\n            </ion-item>\r\n          </ion-card-header>\r\n\r\n          <ion-card-content>\r\n            <ion-list lines=\"none\">\r\n              @for (session of speaker.sessions; track session.id) {\r\n              <ion-item\r\n                detail=\"false\"\r\n                routerLink=\"/app/tabs/speakers/session/{{session.id}}\"\r\n              >\r\n                <ion-label>\r\n                  <h3>{{session.name}}</h3>\r\n                </ion-label>\r\n              </ion-item>\r\n              }\r\n\r\n              <ion-item\r\n                detail=\"false\"\r\n                routerLink=\"/app/tabs/speakers/speaker-details/{{speaker.id}}\"\r\n              >\r\n                <ion-label>\r\n                  <h3>About {{speaker.name}}</h3>\r\n                </ion-label>\r\n              </ion-item>\r\n            </ion-list>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n      }\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275interpolate1", "session_r1", "id", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "name", "\u0275\u0275element", "\u0275\u0275repeaterCreate", "SpeakerListPage_For_14_For_14_Template", "_forTrack0", "speaker_r2", "profilePic", "\u0275\u0275sanitizeUrl", "title", "\u0275\u0275repeater", "sessions", "\u0275\u0275textInterpolate1", "SpeakerListPage", "constructor", "confData", "inject", "ConferenceService", "speakers", "ionViewDidEnter", "getSpeakers", "subscribe", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "SpeakerListPage_For_14_Template", "IonHeader", "IonToolbar", "IonButtons", "IonMenuButton", "IonTitle", "IonContent", "IonGrid", "IonRow", "IonCol", "IonCard", "IonCardHeader", "IonItem", "IonAvatar", "IonLabel", "IonCardContent", "IonList", "RouterLink", "styles", "_SpeakerListPage"]
}
