{"version":3,"sources":["node_modules/@ionic/core/components/index7.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { d as doc } from './index9.js';\nimport { q as pointerCoord } from './helpers.js';\nconst startTapClick = config => {\n  if (doc === undefined) {\n    return;\n  }\n  let lastActivated = 0;\n  let activatableEle;\n  let activeRipple;\n  let activeDefer;\n  const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n  const clearDefers = new WeakMap();\n  const cancelActive = () => {\n    if (activeDefer) clearTimeout(activeDefer);\n    activeDefer = undefined;\n    if (activatableEle) {\n      removeActivated(false);\n      activatableEle = undefined;\n    }\n  };\n  const pointerDown = ev => {\n    // Ignore right clicks\n    if (activatableEle || ev.button === 2) {\n      return;\n    }\n    setActivatedElement(getActivatableTarget(ev), ev);\n  };\n  const pointerUp = ev => {\n    setActivatedElement(undefined, ev);\n  };\n  const setActivatedElement = (el, ev) => {\n    // do nothing\n    if (el && el === activatableEle) {\n      return;\n    }\n    if (activeDefer) clearTimeout(activeDefer);\n    activeDefer = undefined;\n    const {\n      x,\n      y\n    } = pointerCoord(ev);\n    // deactivate selected\n    if (activatableEle) {\n      if (clearDefers.has(activatableEle)) {\n        throw new Error('internal error');\n      }\n      if (!activatableEle.classList.contains(ACTIVATED)) {\n        addActivated(activatableEle, x, y);\n      }\n      removeActivated(true);\n    }\n    // activate\n    if (el) {\n      const deferId = clearDefers.get(el);\n      if (deferId) {\n        clearTimeout(deferId);\n        clearDefers.delete(el);\n      }\n      el.classList.remove(ACTIVATED);\n      const callback = () => {\n        addActivated(el, x, y);\n        activeDefer = undefined;\n      };\n      if (isInstant(el)) {\n        callback();\n      } else {\n        activeDefer = setTimeout(callback, ADD_ACTIVATED_DEFERS);\n      }\n    }\n    activatableEle = el;\n  };\n  const addActivated = (el, x, y) => {\n    lastActivated = Date.now();\n    el.classList.add(ACTIVATED);\n    if (!useRippleEffect) return;\n    const rippleEffect = getRippleEffect(el);\n    if (rippleEffect !== null) {\n      removeRipple();\n      activeRipple = rippleEffect.addRipple(x, y);\n    }\n  };\n  const removeRipple = () => {\n    if (activeRipple !== undefined) {\n      activeRipple.then(remove => remove());\n      activeRipple = undefined;\n    }\n  };\n  const removeActivated = smooth => {\n    removeRipple();\n    const active = activatableEle;\n    if (!active) {\n      return;\n    }\n    const time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\n    if (smooth && time > 0 && !isInstant(active)) {\n      const deferId = setTimeout(() => {\n        active.classList.remove(ACTIVATED);\n        clearDefers.delete(active);\n      }, CLEAR_STATE_DEFERS);\n      clearDefers.set(active, deferId);\n    } else {\n      active.classList.remove(ACTIVATED);\n    }\n  };\n  doc.addEventListener('ionGestureCaptured', cancelActive);\n  doc.addEventListener('pointerdown', pointerDown, true);\n  doc.addEventListener('pointerup', pointerUp, true);\n  /**\n   * Tap click effects such as the ripple effect should\n   * not happen when scrolling. For example, if a user scrolls\n   * the page but also happens to do a touchstart on a button\n   * as part of the scroll, the ripple effect should not\n   * be dispatched. The ripple effect should only happen\n   * if the button is activated and the page is not scrolling.\n   *\n   * pointercancel is dispatched on a gesture when scrolling\n   * starts, so this lets us avoid having to listen for\n   * ion-content's scroll events.\n   */\n  doc.addEventListener('pointercancel', cancelActive, true);\n};\n// TODO(FW-2832): type\nconst getActivatableTarget = ev => {\n  if (ev.composedPath !== undefined) {\n    /**\n     * composedPath returns EventTarget[]. However,\n     * objects other than Element can be targets too.\n     * For example, AudioContext can be a target. In this\n     * case, we know that the event is a UIEvent so we\n     * can assume that the path will contain either Element\n     * or ShadowRoot.\n     */\n    const path = ev.composedPath();\n    for (let i = 0; i < path.length - 2; i++) {\n      const el = path[i];\n      if (!(el instanceof ShadowRoot) && el.classList.contains('ion-activatable')) {\n        return el;\n      }\n    }\n  } else {\n    return ev.target.closest('.ion-activatable');\n  }\n};\nconst isInstant = el => {\n  return el.classList.contains('ion-activatable-instant');\n};\nconst getRippleEffect = el => {\n  if (el.shadowRoot) {\n    const ripple = el.shadowRoot.querySelector('ion-ripple-effect');\n    if (ripple) {\n      return ripple;\n    }\n  }\n  return el.querySelector('ion-ripple-effect');\n};\nconst ACTIVATED = 'ion-activated';\nconst ADD_ACTIVATED_DEFERS = 100;\nconst CLEAR_STATE_DEFERS = 150;\nexport { startTapClick };"],"mappings":"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","names":["startTapClick","config","doc","lastActivated","activatableEle","activeRipple","activeDefer","useRippleEffect","clearDefers","cancelActive","removeActivated","pointerDown","ev","setActivatedElement","getActivatableTarget","pointerUp","el","x","y","pointerCoord","ACTIVATED","addActivated","deferId","callback","isInstant","ADD_ACTIVATED_DEFERS","rippleEffect","getRippleEffect","removeRipple","remove","smooth","active","time","CLEAR_STATE_DEFERS","path","i","ripple"],"x_google_ignoreList":[0]}