{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ionic-global-CTSyufhF.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { e as config, l as configFromSession, m as configFromURL, n as saveConfig, o as getMode, q as setMode, f as printIonWarning } from './index-4DxY6_gG.js';\nconst getPlatforms = win => setupPlatforms(win);\nconst isPlatform = (winOrPlatform, platform) => {\n  if (typeof winOrPlatform === 'string') {\n    platform = winOrPlatform;\n    winOrPlatform = undefined;\n  }\n  return getPlatforms(winOrPlatform).includes(platform);\n};\nconst setupPlatforms = (win = window) => {\n  if (typeof win === 'undefined') {\n    return [];\n  }\n  win.Ionic = win.Ionic || {};\n  let platforms = win.Ionic.platforms;\n  if (platforms == null) {\n    platforms = win.Ionic.platforms = detectPlatforms(win);\n    platforms.forEach(p => win.document.documentElement.classList.add(`plt-${p}`));\n  }\n  return platforms;\n};\nconst detectPlatforms = win => {\n  const customPlatformMethods = config.get('platform');\n  return Object.keys(PLATFORMS_MAP).filter(p => {\n    const customMethod = customPlatformMethods === null || customPlatformMethods === void 0 ? void 0 : customPlatformMethods[p];\n    return typeof customMethod === 'function' ? customMethod(win) : PLATFORMS_MAP[p](win);\n  });\n};\nconst isMobileWeb = win => isMobile(win) && !isHybrid(win);\nconst isIpad = win => {\n  // iOS 12 and below\n  if (testUserAgent(win, /iPad/i)) {\n    return true;\n  }\n  // iOS 13+\n  if (testUserAgent(win, /Macintosh/i) && isMobile(win)) {\n    return true;\n  }\n  return false;\n};\nconst isIphone = win => testUserAgent(win, /iPhone/i);\nconst isIOS = win => testUserAgent(win, /iPhone|iPod/i) || isIpad(win);\nconst isAndroid = win => testUserAgent(win, /android|sink/i);\nconst isAndroidTablet = win => {\n  return isAndroid(win) && !testUserAgent(win, /mobile/i);\n};\nconst isPhablet = win => {\n  const width = win.innerWidth;\n  const height = win.innerHeight;\n  const smallest = Math.min(width, height);\n  const largest = Math.max(width, height);\n  return smallest > 390 && smallest < 520 && largest > 620 && largest < 800;\n};\nconst isTablet = win => {\n  const width = win.innerWidth;\n  const height = win.innerHeight;\n  const smallest = Math.min(width, height);\n  const largest = Math.max(width, height);\n  return isIpad(win) || isAndroidTablet(win) || smallest > 460 && smallest < 820 && largest > 780 && largest < 1400;\n};\nconst isMobile = win => matchMedia(win, '(any-pointer:coarse)');\nconst isDesktop = win => !isMobile(win);\nconst isHybrid = win => isCordova(win) || isCapacitorNative(win);\nconst isCordova = win => !!(win['cordova'] || win['phonegap'] || win['PhoneGap']);\nconst isCapacitorNative = win => {\n  const capacitor = win['Capacitor'];\n  // TODO(ROU-11693): Remove when we no longer support Capacitor 2, which does not have isNativePlatform\n  return !!((capacitor === null || capacitor === void 0 ? void 0 : capacitor.isNative) || (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isNativePlatform) && !!capacitor.isNativePlatform());\n};\nconst isElectron = win => testUserAgent(win, /electron/i);\nconst isPWA = win => {\n  var _a;\n  return !!(((_a = win.matchMedia) === null || _a === void 0 ? void 0 : _a.call(win, '(display-mode: standalone)').matches) || win.navigator.standalone);\n};\nconst testUserAgent = (win, expr) => expr.test(win.navigator.userAgent);\nconst matchMedia = (win, query) => {\n  var _a;\n  return (_a = win.matchMedia) === null || _a === void 0 ? void 0 : _a.call(win, query).matches;\n};\nconst PLATFORMS_MAP = {\n  ipad: isIpad,\n  iphone: isIphone,\n  ios: isIOS,\n  android: isAndroid,\n  phablet: isPhablet,\n  tablet: isTablet,\n  cordova: isCordova,\n  capacitor: isCapacitorNative,\n  electron: isElectron,\n  pwa: isPWA,\n  mobile: isMobile,\n  mobileweb: isMobileWeb,\n  desktop: isDesktop,\n  hybrid: isHybrid\n};\n\n// TODO(FW-2832): types\nlet defaultMode;\nconst getIonMode = ref => {\n  return ref && getMode(ref) || defaultMode;\n};\nconst initialize = (userConfig = {}) => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const doc = window.document;\n  const win = window;\n  const Ionic = win.Ionic = win.Ionic || {};\n  // create the Ionic.config from raw config object (if it exists)\n  // and convert Ionic.config into a ConfigApi that has a get() fn\n  const configObj = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, configFromSession(win)), {\n    persistConfig: false\n  }), Ionic.config), configFromURL(win)), userConfig);\n  config.reset(configObj);\n  if (config.getBoolean('persistConfig')) {\n    saveConfig(win, configObj);\n  }\n  // Setup platforms\n  setupPlatforms(win);\n  // first see if the mode was set as an attribute on <html>\n  // which could have been set by the user, or by pre-rendering\n  // otherwise get the mode via config settings, and fallback to md\n  Ionic.config = config;\n  Ionic.mode = defaultMode = config.get('mode', doc.documentElement.getAttribute('mode') || (isPlatform(win, 'ios') ? 'ios' : 'md'));\n  config.set('mode', defaultMode);\n  doc.documentElement.setAttribute('mode', defaultMode);\n  doc.documentElement.classList.add(defaultMode);\n  if (config.getBoolean('_testing')) {\n    config.set('animated', false);\n  }\n  const isIonicElement = elm => {\n    var _a;\n    return (_a = elm.tagName) === null || _a === void 0 ? void 0 : _a.startsWith('ION-');\n  };\n  const isAllowedIonicModeValue = elmMode => ['ios', 'md'].includes(elmMode);\n  setMode(elm => {\n    while (elm) {\n      const elmMode = elm.mode || elm.getAttribute('mode');\n      if (elmMode) {\n        if (isAllowedIonicModeValue(elmMode)) {\n          return elmMode;\n        } else if (isIonicElement(elm)) {\n          printIonWarning('Invalid ionic mode: \"' + elmMode + '\", expected: \"ios\" or \"md\"');\n        }\n      }\n      elm = elm.parentElement;\n    }\n    return defaultMode;\n  });\n};\nexport { isPlatform as a, getIonMode as b, getPlatforms as g, initialize as i };"],"mappings":"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","names":["getPlatforms","win","setupPlatforms","isPlatform","winOrPlatform","platform","platforms","detectPlatforms","p","customPlatformMethods","config","PLATFORMS_MAP","customMethod","isMobileWeb","isMobile","isHybrid","isIpad","testUserAgent","isIphone","isIOS","isAndroid","isAndroidTablet","isPhablet","width","height","smallest","largest","isTablet","matchMedia","isDesktop","isCordova","isCapacitorNative","capacitor","isElectron","isPWA","_a","expr","query","defaultMode","getIonMode","ref","getMode","initialize","userConfig","doc","Ionic","configObj","configFromSession","configFromURL","saveConfig","isIonicElement","elm","isAllowedIonicModeValue","elmMode","setMode","printIonWarning"],"x_google_ignoreList":[0]}