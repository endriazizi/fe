{"version":3,"sources":["node_modules/@ionic/core/dist/esm/watch-options-Dtdm8lKC.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst watchForOptions = (containerEl, tagName, onChange) => {\n  if (typeof MutationObserver === 'undefined') {\n    return;\n  }\n  const mutation = new MutationObserver(mutationList => {\n    onChange(getSelectedOption(mutationList, tagName));\n  });\n  mutation.observe(containerEl, {\n    childList: true,\n    subtree: true\n  });\n  return mutation;\n};\nconst getSelectedOption = (mutationList, tagName) => {\n  let newOption;\n  mutationList.forEach(mut => {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < mut.addedNodes.length; i++) {\n      newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\n    }\n  });\n  return newOption;\n};\n/**\n * The \"value\" key is only set on some components such as ion-select-option.\n * As a result, we create a default union type of HTMLElement and the \"value\" key.\n * However, implementers are required to provide the appropriate component type\n * such as HTMLIonSelectOptionElement.\n */\nconst findCheckedOption = (node, tagName) => {\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n   * The above check ensures \"node\" is an Element (nodeType 1).\n   */\n  if (node.nodeType !== 1) {\n    return undefined;\n  }\n  // HTMLElement inherits from Element, so we cast \"el\" as T.\n  const el = node;\n  const options = el.tagName === tagName.toUpperCase() ? [el] : Array.from(el.querySelectorAll(tagName));\n  return options.find(o => o.value === el.value);\n};\nexport { watchForOptions as w };"],"mappings":"AAGA,IAAMA,EAAkB,CAACC,EAAaC,EAASC,IAAa,CAC1D,GAAI,OAAO,iBAAqB,IAC9B,OAEF,IAAMC,EAAW,IAAI,iBAAiBC,GAAgB,CACpDF,EAASG,EAAkBD,EAAcH,CAAO,CAAC,CACnD,CAAC,EACD,OAAAE,EAAS,QAAQH,EAAa,CAC5B,UAAW,GACX,QAAS,EACX,CAAC,EACMG,CACT,EACME,EAAoB,CAACD,EAAcH,IAAY,CACnD,IAAIK,EACJ,OAAAF,EAAa,QAAQG,GAAO,CAE1B,QAASC,EAAI,EAAGA,EAAID,EAAI,WAAW,OAAQC,IACzCF,EAAYG,EAAkBF,EAAI,WAAWC,CAAC,EAAGP,CAAO,GAAKK,CAEjE,CAAC,EACMA,CACT,EAOMG,EAAoB,CAACC,EAAMT,IAAY,CAK3C,GAAIS,EAAK,WAAa,EACpB,OAGF,IAAMC,EAAKD,EAEX,OADgBC,EAAG,UAAYV,EAAQ,YAAY,EAAI,CAACU,CAAE,EAAI,MAAM,KAAKA,EAAG,iBAAiBV,CAAO,CAAC,GACtF,KAAKW,GAAKA,EAAE,QAAUD,EAAG,KAAK,CAC/C","names":["watchForOptions","containerEl","tagName","onChange","mutation","mutationList","getSelectedOption","newOption","mut","i","findCheckedOption","node","el","o"],"x_google_ignoreList":[0]}