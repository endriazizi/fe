{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, d as Host, g as getElement, c as createEvent } from './index-4DxY6_gG.js';\nimport { j as reorderThreeOutline, k as reorderTwoSharp } from './index-DV3sJJW8.js';\nimport { b as getIonMode } from './ionic-global-CTSyufhF.js';\nimport { f as findClosestIonContent, g as getScrollElement } from './index-7UbSlv7N.js';\nimport { r as raf } from './helpers-8KSQQGQy.js';\nimport { b as hapticSelectionStart, a as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic-DzAMWJuk.js';\nimport './capacitor-CFERIeaU.js';\nimport './index-ZjP4CjeZ.js';\nconst reorderIosCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:2.125rem;opacity:0.4}\";\nconst reorderMdCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:1.9375rem;opacity:0.3}\";\nconst Reorder = /*#__PURE__*/(() => {\n  let Reorder = class {\n    constructor(hostRef) {\n      registerInstance(this, hostRef);\n    }\n    onClick(ev) {\n      const reorderGroup = this.el.closest('ion-reorder-group');\n      ev.preventDefault();\n      // Only stop event propagation if the reorder is inside of an enabled\n      // reorder group. This allows interaction with clickable children components.\n      if (!reorderGroup || !reorderGroup.disabled) {\n        ev.stopImmediatePropagation();\n      }\n    }\n    render() {\n      const mode = getIonMode(this);\n      const reorderIcon = mode === 'ios' ? reorderThreeOutline : reorderTwoSharp;\n      return h(Host, {\n        key: 'e6807bb349725682e99e791ac65e729a360d64e8',\n        class: mode\n      }, h(\"slot\", {\n        key: '1c691cdbffa6427ba08dc12184c69559ed5d5506'\n      }, h(\"ion-icon\", {\n        key: '8b4150302cdca475379582b2251737b5e74079b1',\n        icon: reorderIcon,\n        lazy: false,\n        class: \"reorder-icon\",\n        part: \"icon\",\n        \"aria-hidden\": \"true\"\n      })));\n    }\n    get el() {\n      return getElement(this);\n    }\n  };\n  Reorder.style = {\n    ios: reorderIosCss,\n    md: reorderMdCss\n  };\n  return Reorder;\n})();\nconst reorderGroupCss = \".reorder-list-active>*{display:block;-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\nconst ReorderGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n    this.ionReorderStart = createEvent(this, \"ionReorderStart\", 7);\n    this.ionReorderMove = createEvent(this, \"ionReorderMove\", 7);\n    this.ionReorderEnd = createEvent(this, \"ionReorderEnd\", 7);\n    this.lastToIndex = -1;\n    this.cachedHeights = [];\n    this.scrollElTop = 0;\n    this.scrollElBottom = 0;\n    this.scrollElInitial = 0;\n    this.containerTop = 0;\n    this.containerBottom = 0;\n    this.state = 0 /* ReorderGroupState.Idle */;\n    /**\n     * If `true`, the reorder will be hidden.\n     */\n    this.disabled = true;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async connectedCallback() {\n    const contentEl = findClosestIonContent(this.el);\n    if (contentEl) {\n      this.scrollEl = await getScrollElement(contentEl);\n    }\n    this.gesture = (await import('./index-CfgBF1SE.js')).createGesture({\n      el: this.el,\n      gestureName: 'reorder',\n      gesturePriority: 110,\n      threshold: 0,\n      direction: 'y',\n      passive: false,\n      canStart: detail => this.canStart(detail),\n      onStart: ev => this.onStart(ev),\n      onMove: ev => this.onMove(ev),\n      onEnd: () => this.onEnd()\n    });\n    this.disabledChanged();\n  }\n  disconnectedCallback() {\n    this.onEnd();\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Completes the reorder operation. Must be called by the `ionReorderEnd` event.\n   *\n   * If a list of items is passed, the list will be reordered and returned in the\n   * proper order.\n   *\n   * If no parameters are passed or if `true` is passed in, the reorder will complete\n   * and the item will remain in the position it was dragged to. If `false` is passed,\n   * the reorder will complete and the item will bounce back to its original position.\n   *\n   * @param listOrReorder A list of items to be sorted and returned in the new order or a\n   * boolean of whether or not the reorder should reposition the item.\n   */\n  complete(listOrReorder) {\n    return Promise.resolve(this.completeReorder(listOrReorder));\n  }\n  canStart(ev) {\n    if (this.selectedItemEl || this.state !== 0 /* ReorderGroupState.Idle */) {\n      return false;\n    }\n    const target = ev.event.target;\n    const reorderEl = target.closest('ion-reorder');\n    if (!reorderEl) {\n      return false;\n    }\n    const item = findReorderItem(reorderEl, this.el);\n    if (!item) {\n      return false;\n    }\n    ev.data = item;\n    return true;\n  }\n  onStart(ev) {\n    ev.event.preventDefault();\n    const item = this.selectedItemEl = ev.data;\n    const heights = this.cachedHeights;\n    heights.length = 0;\n    const el = this.el;\n    const children = el.__children || el.children;\n    if (!children || children.length === 0) {\n      return;\n    }\n    let sum = 0;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      sum += child.offsetHeight;\n      heights.push(sum);\n      child.$ionIndex = i;\n    }\n    const box = el.getBoundingClientRect();\n    this.containerTop = box.top;\n    this.containerBottom = box.bottom;\n    if (this.scrollEl) {\n      const scrollBox = this.scrollEl.getBoundingClientRect();\n      this.scrollElInitial = this.scrollEl.scrollTop;\n      this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n      this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n    } else {\n      this.scrollElInitial = 0;\n      this.scrollElTop = 0;\n      this.scrollElBottom = 0;\n    }\n    this.lastToIndex = indexForItem(item);\n    this.selectedItemHeight = item.offsetHeight;\n    this.state = 1 /* ReorderGroupState.Active */;\n    item.classList.add(ITEM_REORDER_SELECTED);\n    hapticSelectionStart();\n    this.ionReorderStart.emit();\n  }\n  onMove(ev) {\n    const selectedItem = this.selectedItemEl;\n    if (!selectedItem) {\n      return;\n    }\n    // Scroll if we reach the scroll margins\n    const scroll = this.autoscroll(ev.currentY);\n    // // Get coordinate\n    const top = this.containerTop - scroll;\n    const bottom = this.containerBottom - scroll;\n    const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n    const deltaY = scroll + currentY - ev.startY;\n    const normalizedY = currentY - top;\n    const fromIndex = this.lastToIndex;\n    const toIndex = this.itemIndexForTop(normalizedY);\n    if (toIndex !== this.lastToIndex) {\n      const fromIndex = indexForItem(selectedItem);\n      this.lastToIndex = toIndex;\n      hapticSelectionChanged();\n      this.reorderMove(fromIndex, toIndex);\n    }\n    // Update selected item position\n    selectedItem.style.transform = `translateY(${deltaY}px)`;\n    this.ionReorderMove.emit({\n      from: fromIndex,\n      to: toIndex\n    });\n  }\n  onEnd() {\n    const selectedItemEl = this.selectedItemEl;\n    this.state = 2 /* ReorderGroupState.Complete */;\n    if (!selectedItemEl) {\n      this.state = 0 /* ReorderGroupState.Idle */;\n      return;\n    }\n    const toIndex = this.lastToIndex;\n    const fromIndex = indexForItem(selectedItemEl);\n    if (toIndex === fromIndex) {\n      this.completeReorder();\n    } else {\n      // TODO(FW-6590): Remove this once the deprecated event is removed\n      this.ionItemReorder.emit({\n        from: fromIndex,\n        to: toIndex,\n        complete: this.completeReorder.bind(this)\n      });\n    }\n    hapticSelectionEnd();\n    this.ionReorderEnd.emit({\n      from: fromIndex,\n      to: toIndex,\n      complete: this.completeReorder.bind(this)\n    });\n  }\n  completeReorder(listOrReorder) {\n    const selectedItemEl = this.selectedItemEl;\n    if (selectedItemEl && this.state === 2 /* ReorderGroupState.Complete */) {\n      const children = this.el.__children || this.el.children;\n      const len = children.length;\n      const toIndex = this.lastToIndex;\n      const fromIndex = indexForItem(selectedItemEl);\n      /**\n       * insertBefore and setting the transform\n       * needs to happen in the same frame otherwise\n       * there will be a duplicate transition. This primarily\n       * impacts Firefox where insertBefore and transform operations\n       * are happening in two separate frames.\n       */\n      raf(() => {\n        if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\n          const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n          this.el.insertBefore(selectedItemEl, ref);\n        }\n        for (let i = 0; i < len; i++) {\n          children[i].style['transform'] = '';\n        }\n      });\n      if (Array.isArray(listOrReorder)) {\n        listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n      }\n      selectedItemEl.style.transition = '';\n      selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n      this.selectedItemEl = undefined;\n      this.state = 0 /* ReorderGroupState.Idle */;\n    }\n    return listOrReorder;\n  }\n  itemIndexForTop(deltaY) {\n    const heights = this.cachedHeights;\n    for (let i = 0; i < heights.length; i++) {\n      if (heights[i] > deltaY) {\n        return i;\n      }\n    }\n    return heights.length - 1;\n  }\n  /********* DOM WRITE ********* */\n  reorderMove(fromIndex, toIndex) {\n    const itemHeight = this.selectedItemHeight;\n    const children = this.el.__children || this.el.children;\n    for (let i = 0; i < children.length; i++) {\n      const style = children[i].style;\n      let value = '';\n      if (i > fromIndex && i <= toIndex) {\n        value = `translateY(${-itemHeight}px)`;\n      } else if (i < fromIndex && i >= toIndex) {\n        value = `translateY(${itemHeight}px)`;\n      }\n      style['transform'] = value;\n    }\n  }\n  autoscroll(posY) {\n    if (!this.scrollEl) {\n      return 0;\n    }\n    let amount = 0;\n    if (posY < this.scrollElTop) {\n      amount = -10;\n    } else if (posY > this.scrollElBottom) {\n      amount = SCROLL_JUMP;\n    }\n    if (amount !== 0) {\n      this.scrollEl.scrollBy(0, amount);\n    }\n    return this.scrollEl.scrollTop - this.scrollElInitial;\n  }\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      key: 'b9641f3061d67fbfe68317b901ec33267046e073',\n      class: {\n        [mode]: true,\n        'reorder-enabled': !this.disabled,\n        'reorder-list-active': this.state !== 0 /* ReorderGroupState.Idle */\n      }\n    });\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n};\nconst indexForItem = element => {\n  return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n  let parent;\n  while (node) {\n    parent = node.parentElement;\n    if (parent === container) {\n      return node;\n    }\n    node = parent;\n  }\n  return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n  const element = array[from];\n  array.splice(from, 1);\n  array.splice(to, 0, element);\n  return array.slice();\n};\nReorderGroup.style = reorderGroupCss;\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };"],"mappings":"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","names":["reorderIosCss","reorderMdCss","Reorder","hostRef","registerInstance","ev","reorderGroup","mode","getIonMode","h","Host","reorderThreeOutline","reorderTwoSharp","getElement","reorderGroupCss","ReorderGroup","createEvent","__async","contentEl","findClosestIonContent","getScrollElement","detail","listOrReorder","reorderEl","item","findReorderItem","heights","el","children","sum","i","child","box","scrollBox","AUTO_SCROLL_MARGIN","indexForItem","ITEM_REORDER_SELECTED","hapticSelectionStart","selectedItem","scroll","top","bottom","currentY","deltaY","normalizedY","fromIndex","toIndex","hapticSelectionChanged","selectedItemEl","hapticSelectionEnd","len","raf","ref","reorderArray","itemHeight","style","value","posY","amount","SCROLL_JUMP","element","node","container","parent","array","from","to"],"x_google_ignoreList":[0]}