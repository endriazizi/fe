{"version":3,"sources":["node_modules/@ionic/core/components/gesture-controller.js","node_modules/@ionic/core/components/index3.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nclass GestureController {\n  constructor() {\n    this.gestureId = 0;\n    this.requestedStart = new Map();\n    this.disabledGestures = new Map();\n    this.disabledScroll = new Set();\n  }\n  /**\n   * Creates a gesture delegate based on the GestureConfig passed\n   */\n  createGesture(config) {\n    var _a;\n    return new GestureDelegate(this, this.newID(), config.name, (_a = config.priority) !== null && _a !== void 0 ? _a : 0, !!config.disableScroll);\n  }\n  /**\n   * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n   */\n  createBlocker(opts = {}) {\n    return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n  }\n  start(gestureName, id, priority) {\n    if (!this.canStart(gestureName)) {\n      this.requestedStart.delete(id);\n      return false;\n    }\n    this.requestedStart.set(id, priority);\n    return true;\n  }\n  capture(gestureName, id, priority) {\n    if (!this.start(gestureName, id, priority)) {\n      return false;\n    }\n    const requestedStart = this.requestedStart;\n    let maxPriority = -1e4;\n    requestedStart.forEach(value => {\n      maxPriority = Math.max(maxPriority, value);\n    });\n    if (maxPriority === priority) {\n      this.capturedId = id;\n      requestedStart.clear();\n      const event = new CustomEvent('ionGestureCaptured', {\n        detail: {\n          gestureName\n        }\n      });\n      document.dispatchEvent(event);\n      return true;\n    }\n    requestedStart.delete(id);\n    return false;\n  }\n  release(id) {\n    this.requestedStart.delete(id);\n    if (this.capturedId === id) {\n      this.capturedId = undefined;\n    }\n  }\n  disableGesture(gestureName, id) {\n    let set = this.disabledGestures.get(gestureName);\n    if (set === undefined) {\n      set = new Set();\n      this.disabledGestures.set(gestureName, set);\n    }\n    set.add(id);\n  }\n  enableGesture(gestureName, id) {\n    const set = this.disabledGestures.get(gestureName);\n    if (set !== undefined) {\n      set.delete(id);\n    }\n  }\n  disableScroll(id) {\n    this.disabledScroll.add(id);\n    if (this.disabledScroll.size === 1) {\n      document.body.classList.add(BACKDROP_NO_SCROLL);\n    }\n  }\n  enableScroll(id) {\n    this.disabledScroll.delete(id);\n    if (this.disabledScroll.size === 0) {\n      document.body.classList.remove(BACKDROP_NO_SCROLL);\n    }\n  }\n  canStart(gestureName) {\n    if (this.capturedId !== undefined) {\n      // a gesture already captured\n      return false;\n    }\n    if (this.isDisabled(gestureName)) {\n      return false;\n    }\n    return true;\n  }\n  isCaptured() {\n    return this.capturedId !== undefined;\n  }\n  isScrollDisabled() {\n    return this.disabledScroll.size > 0;\n  }\n  isDisabled(gestureName) {\n    const disabled = this.disabledGestures.get(gestureName);\n    if (disabled && disabled.size > 0) {\n      return true;\n    }\n    return false;\n  }\n  newID() {\n    this.gestureId++;\n    return this.gestureId;\n  }\n}\nclass GestureDelegate {\n  constructor(ctrl, id, name, priority, disableScroll) {\n    this.id = id;\n    this.name = name;\n    this.disableScroll = disableScroll;\n    this.priority = priority * 1000000 + id;\n    this.ctrl = ctrl;\n  }\n  canStart() {\n    if (!this.ctrl) {\n      return false;\n    }\n    return this.ctrl.canStart(this.name);\n  }\n  start() {\n    if (!this.ctrl) {\n      return false;\n    }\n    return this.ctrl.start(this.name, this.id, this.priority);\n  }\n  capture() {\n    if (!this.ctrl) {\n      return false;\n    }\n    const captured = this.ctrl.capture(this.name, this.id, this.priority);\n    if (captured && this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n    return captured;\n  }\n  release() {\n    if (this.ctrl) {\n      this.ctrl.release(this.id);\n      if (this.disableScroll) {\n        this.ctrl.enableScroll(this.id);\n      }\n    }\n  }\n  destroy() {\n    this.release();\n    this.ctrl = undefined;\n  }\n}\nclass BlockerDelegate {\n  constructor(ctrl, id, disable, disableScroll) {\n    this.id = id;\n    this.disable = disable;\n    this.disableScroll = disableScroll;\n    this.ctrl = ctrl;\n  }\n  block() {\n    if (!this.ctrl) {\n      return;\n    }\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.disableGesture(gesture, this.id);\n      }\n    }\n    if (this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n  }\n  unblock() {\n    if (!this.ctrl) {\n      return;\n    }\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.enableGesture(gesture, this.id);\n      }\n    }\n    if (this.disableScroll) {\n      this.ctrl.enableScroll(this.id);\n    }\n  }\n  destroy() {\n    this.unblock();\n    this.ctrl = undefined;\n  }\n}\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nconst GESTURE_CONTROLLER = new GestureController();\nexport { BACKDROP_NO_SCROLL as B, GESTURE_CONTROLLER as G };","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nconst addEventListener = (el,\n// TODO(FW-2832): type\neventName, callback, opts) => {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  const listenerOpts = supportsPassive(el) ? {\n    capture: false,\n    passive: !!opts.passive\n  } : false;\n  let add;\n  let remove;\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  } else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n  el[add](eventName, callback, listenerOpts);\n  return () => {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\nconst supportsPassive = node => {\n  if (_sPassive === undefined) {\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get: () => {\n          _sPassive = true;\n        }\n      });\n      node.addEventListener('optsTest', () => {\n        return;\n      }, opts);\n    } catch (e) {\n      _sPassive = false;\n    }\n  }\n  return !!_sPassive;\n};\nlet _sPassive;\nconst MOUSE_WAIT = 2000;\n// TODO(FW-2832): types\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n  let rmTouchStart;\n  let rmTouchMove;\n  let rmTouchEnd;\n  let rmTouchCancel;\n  let rmMouseStart;\n  let rmMouseMove;\n  let rmMouseUp;\n  let lastTouchEvent = 0;\n  const handleTouchStart = ev => {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n    /**\n     * Events are dispatched on the element that is tapped and bubble up to\n     * the reference element in the gesture. In the event that the element this\n     * event was first dispatched on is removed from the DOM, the event will no\n     * longer bubble up to our reference element. This leaves the gesture in an\n     * unusable state. To account for this, the touchend and touchcancel listeners\n     * should be added to the event target so that they still fire even if the target\n     * is removed from the DOM.\n     */\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\n    }\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n  const handleMouseDown = ev => {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n  const handleTouchEnd = ev => {\n    stopTouch();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const handleMouseUp = ev => {\n    stopMouse();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const stopTouch = () => {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n  const stopMouse = () => {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n    rmMouseMove = rmMouseUp = undefined;\n  };\n  const stop = () => {\n    stopTouch();\n    stopMouse();\n  };\n  const enable = (isEnabled = true) => {\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    } else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n  const destroy = () => {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n  return {\n    enable,\n    stop,\n    destroy\n  };\n};\nconst getDocument = node => {\n  return node instanceof Document ? node : node.ownerDocument;\n};\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n  const radians = maxAngle * (Math.PI / 180);\n  const isDirX = direction === 'x';\n  const maxCosine = Math.cos(radians);\n  const threshold = thresh * thresh;\n  let startX = 0;\n  let startY = 0;\n  let dirty = false;\n  let isPan = 0;\n  return {\n    start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n    detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n      const deltaX = x - startX;\n      const deltaY = y - startY;\n      const distance = deltaX * deltaX + deltaY * deltaY;\n      if (distance < threshold) {\n        return false;\n      }\n      const hypotenuse = Math.sqrt(distance);\n      const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n      if (cosine > maxCosine) {\n        isPan = 1;\n      } else if (cosine < -maxCosine) {\n        isPan = -1;\n      } else {\n        isPan = 0;\n      }\n      dirty = false;\n      return true;\n    },\n    isGesture() {\n      return isPan !== 0;\n    },\n    getDirection() {\n      return isPan;\n    }\n  };\n};\n\n// TODO(FW-2832): types\nconst createGesture = config => {\n  let hasCapturedPan = false;\n  let hasStartedPan = false;\n  let hasFiredStart = true;\n  let isMoveQueued = false;\n  const finalConfig = Object.assign({\n    disableScroll: false,\n    direction: 'x',\n    gesturePriority: 0,\n    passive: true,\n    maxAngle: 40,\n    threshold: 10\n  }, config);\n  const canStart = finalConfig.canStart;\n  const onWillStart = finalConfig.onWillStart;\n  const onStart = finalConfig.onStart;\n  const onEnd = finalConfig.onEnd;\n  const notCaptured = finalConfig.notCaptured;\n  const onMove = finalConfig.onMove;\n  const threshold = finalConfig.threshold;\n  const passive = finalConfig.passive;\n  const blurOnStart = finalConfig.blurOnStart;\n  const detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined\n  };\n  const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  const gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll\n  });\n  const pointerDown = ev => {\n    const timeStamp = now(ev);\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev;\n    // Check if gesture can start\n    if (canStart && canStart(detail) === false) {\n      return false;\n    }\n    // Release fallback\n    gesture.release();\n    // Start gesture\n    if (!gesture.start()) {\n      return false;\n    }\n    hasStartedPan = true;\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n  const pointerMove = ev => {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n      return;\n    }\n    // gesture is currently being detected\n    calcGestureData(detail, ev);\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n  const fireOnMove = () => {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n    isMoveQueued = false;\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n  const tryToCapturePan = () => {\n    if (!gesture.capture()) {\n      return false;\n    }\n    hasCapturedPan = true;\n    hasFiredStart = false;\n    // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    } else {\n      fireOnStart();\n    }\n    return true;\n  };\n  const blurActiveElement = () => {\n    if (typeof document !== 'undefined') {\n      const activeElement = document.activeElement;\n      if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\n        activeElement.blur();\n      }\n    }\n  };\n  const fireOnStart = () => {\n    if (blurOnStart) {\n      blurActiveElement();\n    }\n    if (onStart) {\n      onStart(detail);\n    }\n    hasFiredStart = true;\n  };\n  const reset = () => {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  };\n  // END *************************\n  const pointerUp = ev => {\n    const tmpHasCaptured = hasCapturedPan;\n    const tmpHasFiredStart = hasFiredStart;\n    reset();\n    if (!tmpHasFiredStart) {\n      return;\n    }\n    calcGestureData(detail, ev);\n    // Try to capture press\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n      return;\n    }\n    // Not captured any event\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    passive\n  });\n  const abortGesture = () => {\n    reset();\n    pointerEvents.stop();\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  return {\n    enable(enable = true) {\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n        reset();\n      }\n      pointerEvents.enable(enable);\n    },\n    destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    }\n  };\n};\nconst calcGestureData = (detail, ev) => {\n  if (!ev) {\n    return;\n  }\n  const prevX = detail.currentX;\n  const prevY = detail.currentY;\n  const prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  const currentX = detail.currentX;\n  const currentY = detail.currentY;\n  const timestamp = detail.currentTime = now(ev);\n  const timeDelta = timestamp - prevT;\n  if (timeDelta > 0 && timeDelta < 100) {\n    const velocityX = (currentX - prevX) / timeDelta;\n    const velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  let x = 0;\n  let y = 0;\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    } else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n  detail.currentX = x;\n  detail.currentY = y;\n};\nconst now = ev => {\n  return ev.timeStamp || Date.now();\n};\nexport { GESTURE_CONTROLLER, createGesture };"],"mappings":"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","names":["GestureController","config","_a","GestureDelegate","opts","BlockerDelegate","gestureName","id","priority","requestedStart","maxPriority","value","event","set","BACKDROP_NO_SCROLL","disabled","ctrl","name","disableScroll","captured","disable","gesture","GESTURE_CONTROLLER","addEventListener","el","eventName","callback","opts","listenerOpts","supportsPassive","add","remove","node","_sPassive","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","createPanRecognizer","direction","thresh","maxAngle","radians","isDirX","maxCosine","threshold","startX","startY","dirty","isPan","x","y","deltaX","deltaY","distance","hypotenuse","cosine","createGesture","config","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","canStart","onWillStart","onStart","onEnd","notCaptured","onMove","passive","blurOnStart","detail","pan","gesture","GESTURE_CONTROLLER","timeStamp","now","updateDetail","tryToCapturePan","calcGestureData","fireOnMove","abortGesture","fireOnStart","blurActiveElement","activeElement","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","currentX","currentY","timeDelta","velocityX","velocityY","changedTouches","touch"],"x_google_ignoreList":[0,1]}